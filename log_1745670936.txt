[Log] Started logging to file: ./log_1745670936.txt
[Log] Time: 2025-04-26 20:35:36
[Start] Lanalyzer enhanced mode starting
[Args] Target: examples/job.py
[Args] Config: /Users/bayuncao/Code/github/mxcrafts/lanalyzer/rules/pickle_analysis_config.json
[Args] Output: ./analysis_job_1745670936.json
[Args] Debug Mode: True
[Args] Log File: ./log_1745670936.txt
Loaded configuration from /Users/bayuncao/Code/github/mxcrafts/lanalyzer/rules/pickle_analysis_config.json
[File List] The following 1 files will be analyzed:
  1. examples/job.py

[Analysis] Starting analysis of 1 files
[Analysis] Start time: 2025-04-26 20:35:36
[Config] Source types: ['UserInput', 'FileRead', 'NetworkInput', 'DatabaseRead', 'EnvironmentVariables', 'CommandLineArgs']
[Config] Sink types: ['PickleDeserialization']
[Config] Number of rules: 1
[Config] Sink patterns: ['pickle.load', 'pickle.loads', 'cPickle.load', 'cPickle.loads', '_pickle.load', '_pickle.loads']
[Config] Special focus on sinks in 'with open' context: ['pickle.load', 'pickle.loads', 'cPickle.load', 'cPickle.loads', '_pickle.load', '_pickle.loads']

[1/1] ==================================================
[1/1] Starting analysis of file: examples/job.py
[1/1] ==================================================
[1/1] File size: 20314 bytes
[1/1] File line count: 472
[1/1] Starting AST analysis...

🔍 Starting analysis of file: examples/job.py
Loaded 471 lines of source code from examples/job.py
Creating EnhancedTaintVisitor instance for analyzing file: examples/job.py
Initializing complete taint analysis visitor for file: examples/job.py
Successfully loaded source code lines: 471 lines

========== Starting analysis of file: examples/job.py ==========


[Import Tracking] Processing import: os
  Recording direct import: os

[Import Tracking] Processing import: compatible_trick
  Recording direct import: compatible_trick

[Import Tracking] Processing import: argparse
  Recording direct import: argparse

[Import Tracking] Processing import: cloudpickle
  Recording direct import: cloudpickle

[Import Tracking] Processing import: pickle
  Recording direct import: pickle

[Import Tracking] Processing import: psutil
  Recording direct import: psutil

[Import Tracking] Processing import: re
  Recording direct import: re

[Import Tracking] Processing import: sys
  Recording direct import: sys

[Import Tracking] Processing import: tempfile
  Recording direct import: tempfile

[Import Tracking] Processing import: shutil
  Recording direct import: shutil

[Import Tracking] Processing import: threading
  Recording direct import: threading

[Import Tracking] Processing import: time
  Recording direct import: time

[Import Tracking] Processing import: traceback
  Recording direct import: traceback

[Import Tracking] Processing import: zmq
  Recording direct import: zmq

[Import Tracking] Processing import: importlib
  Recording direct import: importlib

[Import Tracking] Processing import: parl
  Recording direct import: parl
Tracked from-import: Process -> multiprocessing.Process
Tracked from-import: Pipe -> multiprocessing.Pipe
Tracked from-import: to_str -> parl.utils.to_str
Tracked from-import: to_byte -> parl.utils.to_byte
Tracked from-import: get_ip_address -> parl.utils.get_ip_address
Tracked from-import: logger -> parl.utils.logger
Tracked from-import: loads_argument -> parl.remote.communication.loads_argument
Tracked from-import: loads_return -> parl.remote.communication.loads_return
Tracked from-import: dumps_argument -> parl.remote.communication.dumps_argument
Tracked from-import: dumps_return -> parl.remote.communication.dumps_return
Tracked from-import: remote_constants -> parl.remote.remote_constants
Tracked from-import: SerializeError -> parl.utils.exceptions.SerializeError
Tracked from-import: DeserializeError -> parl.utils.exceptions.DeserializeError
Tracked from-import: InitializedJob -> parl.remote.message.InitializedJob
Tracked from-import: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file
Tracked from-import: load_remote_class -> parl.remote.remote_class_serialization.load_remote_class
Tracked from-import: create_server_socket -> parl.remote.zmq_utils.create_server_socket
Tracked from-import: create_client_socket -> parl.remote.zmq_utils.create_client_socket
Tracked from-import: HeartbeatServerThread -> parl.remote.grpc_heartbeat.HeartbeatServerThread
Tracked from-import: HeartbeatClientThread -> parl.remote.grpc_heartbeat.HeartbeatClientThread

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='{} imported'), attr='format', ctx=Load())
  Complex expression: '{} imported'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='{} imported'), attr='format', ctx=Load())
  Complex expression: '{} imported'.format
Visiting call: '{} imported'.format (full: None) at line 52
  Args: Name(id='dl_framework', ctx=Load())

[Sink Check] Checking function: '{} imported'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''{} imported'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''{} imported'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''{} imported'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''{} imported'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''{} imported'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''{} imported'.format', full name='None'
    × No match for this pattern
[Sink check result] '{} imported'.format: Not a sink


[Function Name Parsing] Starting parsing: Name(id='Pipe', ctx=Load())
  Found mapping in from_imports: Pipe -> multiprocessing.Pipe
Checking assignment with function call: Pipe (full: multiprocessing.Pipe) at line 79

[Function Name Parsing] Starting parsing: Name(id='Pipe', ctx=Load())
  Found mapping in from_imports: Pipe -> multiprocessing.Pipe

[Function Name Parsing] Starting parsing: Name(id='Pipe', ctx=Load())
  Found mapping in from_imports: Pipe -> multiprocessing.Pipe
Visiting call: Pipe (full: multiprocessing.Pipe) at line 79

[Sink Check] Checking function: Pipe (full name: multiprocessing.Pipe)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
[Sink check result] Pipe: Not a sink


[Function Name Parsing] Starting parsing: Name(id='Pipe', ctx=Load())
  Found mapping in from_imports: Pipe -> multiprocessing.Pipe
Checking assignment with function call: Pipe (full: multiprocessing.Pipe) at line 80

[Function Name Parsing] Starting parsing: Name(id='Pipe', ctx=Load())
  Found mapping in from_imports: Pipe -> multiprocessing.Pipe

[Function Name Parsing] Starting parsing: Name(id='Pipe', ctx=Load())
  Found mapping in from_imports: Pipe -> multiprocessing.Pipe
Visiting call: Pipe (full: multiprocessing.Pipe) at line 80

[Sink Check] Checking function: Pipe (full name: multiprocessing.Pipe)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='Pipe', full name='multiprocessing.Pipe'
    × No match for this pattern
[Sink check result] Pipe: Not a sink


[Function Name Parsing] Starting parsing: Name(id='get_ip_address', ctx=Load())
  Found mapping in from_imports: get_ip_address -> parl.utils.get_ip_address
Checking assignment with function call: get_ip_address (full: parl.utils.get_ip_address) at line 84

[Function Name Parsing] Starting parsing: Name(id='get_ip_address', ctx=Load())
  Found mapping in from_imports: get_ip_address -> parl.utils.get_ip_address

[Function Name Parsing] Starting parsing: Name(id='get_ip_address', ctx=Load())
  Found mapping in from_imports: get_ip_address -> parl.utils.get_ip_address
Visiting call: get_ip_address (full: parl.utils.get_ip_address) at line 84

[Sink Check] Checking function: get_ip_address (full name: parl.utils.get_ip_address)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
[Sink check result] get_ip_address: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load())
  Constructed full name: os.getpid
Checking assignment with function call: getpid (full: os.getpid) at line 85

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load())
  Constructed full name: os.getpid

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load())
  Constructed full name: os.getpid
Visiting call: getpid (full: os.getpid) at line 85

[Sink Check] Checking function: getpid (full name: os.getpid)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='getpid', full name='os.getpid'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='getpid', full name='os.getpid'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='getpid', full name='os.getpid'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='getpid', full name='os.getpid'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='getpid', full name='os.getpid'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='getpid', full name='os.getpid'
    × No match for this pattern
[Sink check result] getpid: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Lock', ctx=Load())
  Constructed full name: threading.Lock
Checking assignment with function call: Lock (full: threading.Lock) at line 91
Found source in assignment: FileRead at line 91

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Lock', ctx=Load())
  Constructed full name: threading.Lock

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Lock', ctx=Load())
  Constructed full name: threading.Lock
Visiting call: Lock (full: threading.Lock) at line 91
Found source: FileRead at line 91

[Sink Check] Checking function: Lock (full name: threading.Lock)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='Lock', full name='threading.Lock'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='Lock', full name='threading.Lock'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='Lock', full name='threading.Lock'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='Lock', full name='threading.Lock'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='Lock', full name='threading.Lock'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='Lock', full name='threading.Lock'
    × No match for this pattern
[Sink check result] Lock: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread
Found source assignment: th = Thread at line 92

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread
Checking assignment with function call: Thread (full: threading.Thread) at line 92
Found source in assignment: FileRead at line 92
Tainted variable 'th' from source FileRead

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread
Visiting call: Thread (full: threading.Thread) at line 92
  Keywords: target=Attribute(value=Name(id='self', ctx=Load()), attr='_create_sockets', ctx=Load())
Found source: FileRead at line 92

[Sink Check] Checking function: Thread (full name: threading.Thread)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
[Sink check result] Thread: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='th', ctx=Load()), attr='setDaemon', ctx=Load())
  Constructed full name: th.setDaemon
Tracking method call on tainted variable: th.setDaemon at line 93

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='th', ctx=Load()), attr='setDaemon', ctx=Load())
  Constructed full name: th.setDaemon
Visiting call: setDaemon (full: th.setDaemon) at line 93
  Args: Constant(value=True)

[Sink Check] Checking function: setDaemon (full name: th.setDaemon)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='setDaemon', full name='th.setDaemon'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='setDaemon', full name='th.setDaemon'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='setDaemon', full name='th.setDaemon'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='setDaemon', full name='th.setDaemon'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='setDaemon', full name='th.setDaemon'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='setDaemon', full name='th.setDaemon'
    × No match for this pattern
[Sink check result] setDaemon: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='th', ctx=Load()), attr='start', ctx=Load())
  Constructed full name: th.start
Tracking method call on tainted variable: th.start at line 94

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='th', ctx=Load()), attr='start', ctx=Load())
  Constructed full name: th.start
Visiting call: start (full: th.start) at line 94

[Sink Check] Checking function: start (full name: th.start)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='start', full name='th.start'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='start', full name='th.start'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='start', full name='th.start'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='start', full name='th.start'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='start', full name='th.start'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='start', full name='th.start'
    × No match for this pattern
[Sink check result] start: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load())
  Constructed full name: psutil.Process

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load())
  Constructed full name: psutil.Process
Checking assignment with function call: Process (full: psutil.Process) at line 96

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load())
  Constructed full name: psutil.Process

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load())
  Constructed full name: psutil.Process
Visiting call: Process (full: psutil.Process) at line 96
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())

[Sink Check] Checking function: Process (full name: psutil.Process)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
[Sink check result] Process: Not a sink


[Function Name Parsing] Starting parsing: Name(id='float', ctx=Load())
  Using simple name: float

[Function Name Parsing] Starting parsing: Name(id='float', ctx=Load())
  Using simple name: float
Visiting call: float (full: float) at line 97
  Args: Subscript(value=Call(func=Attribute(value=Name(id='process', ctx=Load()), attr='memory_info', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load())

[Sink Check] Checking function: float (full name: float)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='float', full name='float'
    × No match for this pattern
[Sink check result] float: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='process', ctx=Load()), attr='memory_info', ctx=Load())
  Constructed full name: process.memory_info

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='process', ctx=Load()), attr='memory_info', ctx=Load())
  Constructed full name: process.memory_info
Visiting call: memory_info (full: process.memory_info) at line 97

[Sink Check] Checking function: memory_info (full name: process.memory_info)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
[Sink check result] memory_info: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='run', ctx=Load())
  Constructed full name: self.run

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='run', ctx=Load())
  Constructed full name: self.run
Visiting call: run (full: self.run) at line 99
  Args: Name(id='job_address_sender', ctx=Load()), Name(id='job_id_sender', ctx=Load())

[Sink Check] Checking function: run (full name: self.run)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='run', full name='self.run'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='run', full name='self.run'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='run', full name='self.run'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='run', full name='self.run'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='run', full name='self.run'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='run', full name='self.run'
    × No match for this pattern
[Sink check result] run: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='send_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='send_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.send_multipart
Visiting call: send_multipart (full: self.remove_job_socket.send_multipart) at line 102
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='KILLJOB_TAG', ctx=Load()), Call(func=Name(id='to_byte', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='job_address', ctx=Load())], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: self.remove_job_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte

[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte
Visiting call: to_byte (full: parl.utils.to_byte) at line 102
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='job_address', ctx=Load())

[Sink Check] Checking function: to_byte (full name: parl.utils.to_byte)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
[Sink check result] to_byte: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Found source assignment: _ = recv_multipart at line 104

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Checking assignment with function call: recv_multipart (full: self.remove_job_socket.recv_multipart) at line 104
Found source in assignment: NetworkInput at line 104
Tainted variable '_' from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Detected potential recv function: recv_multipart at line 104
  Return value assigned to: _
  Marked _ as tainted from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Visiting call: recv_multipart (full: self.remove_job_socket.recv_multipart) at line 104
Found source: NetworkInput at line 104

[Sink Check] Checking function: recv_multipart (full name: self.remove_job_socket.recv_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
[Sink check result] recv_multipart: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='_exit', ctx=Load())
  Constructed full name: os._exit

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='_exit', ctx=Load())
  Constructed full name: os._exit
Visiting call: _exit (full: os._exit) at line 107
  Args: Constant(value=0)

[Sink Check] Checking function: _exit (full name: os._exit)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
[Sink check result] _exit: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_address_receiver', ctx=Load()), attr='recv', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_address_receiver', ctx=Load())
  Constructed full name: self.job_address_receiver
  Handling nested attributes: self.job_address_receiver.recv
Checking assignment with function call: recv (full: self.job_address_receiver.recv) at line 123
Found source in assignment: NetworkInput at line 123

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_address_receiver', ctx=Load()), attr='recv', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_address_receiver', ctx=Load())
  Constructed full name: self.job_address_receiver
  Handling nested attributes: self.job_address_receiver.recv
Detected potential recv function: recv at line 123

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_address_receiver', ctx=Load()), attr='recv', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_address_receiver', ctx=Load())
  Constructed full name: self.job_address_receiver
  Handling nested attributes: self.job_address_receiver.recv
Visiting call: recv (full: self.job_address_receiver.recv) at line 123
Found source: NetworkInput at line 123

[Sink Check] Checking function: recv (full name: self.job_address_receiver.recv)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='recv', full name='self.job_address_receiver.recv'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='recv', full name='self.job_address_receiver.recv'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='recv', full name='self.job_address_receiver.recv'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='recv', full name='self.job_address_receiver.recv'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='recv', full name='self.job_address_receiver.recv'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='recv', full name='self.job_address_receiver.recv'
    × No match for this pattern
[Sink check result] recv: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_id_receiver', ctx=Load()), attr='recv', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_id_receiver', ctx=Load())
  Constructed full name: self.job_id_receiver
  Handling nested attributes: self.job_id_receiver.recv
Checking assignment with function call: recv (full: self.job_id_receiver.recv) at line 124
Found source in assignment: NetworkInput at line 124

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_id_receiver', ctx=Load()), attr='recv', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_id_receiver', ctx=Load())
  Constructed full name: self.job_id_receiver
  Handling nested attributes: self.job_id_receiver.recv
Detected potential recv function: recv at line 124

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_id_receiver', ctx=Load()), attr='recv', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_id_receiver', ctx=Load())
  Constructed full name: self.job_id_receiver
  Handling nested attributes: self.job_id_receiver.recv
Visiting call: recv (full: self.job_id_receiver.recv) at line 124
Found source: NetworkInput at line 124

[Sink Check] Checking function: recv (full name: self.job_id_receiver.recv)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='recv', full name='self.job_id_receiver.recv'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='recv', full name='self.job_id_receiver.recv'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='recv', full name='self.job_id_receiver.recv'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='recv', full name='self.job_id_receiver.recv'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='recv', full name='self.job_id_receiver.recv'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='recv', full name='self.job_id_receiver.recv'
    × No match for this pattern
[Sink check result] recv: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='zmq', ctx=Load()), attr='Context', ctx=Load())
  Constructed full name: zmq.Context
Checking assignment with function call: Context (full: zmq.Context) at line 126

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='zmq', ctx=Load()), attr='Context', ctx=Load())
  Constructed full name: zmq.Context

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='zmq', ctx=Load()), attr='Context', ctx=Load())
  Constructed full name: zmq.Context
Visiting call: Context (full: zmq.Context) at line 126

[Sink Check] Checking function: Context (full name: zmq.Context)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
[Sink check result] Context: Not a sink


[Function Name Parsing] Starting parsing: Name(id='create_client_socket', ctx=Load())
  Found mapping in from_imports: create_client_socket -> parl.remote.zmq_utils.create_client_socket
Checking assignment with function call: create_client_socket (full: parl.remote.zmq_utils.create_client_socket) at line 128

[Function Name Parsing] Starting parsing: Name(id='create_client_socket', ctx=Load())
  Found mapping in from_imports: create_client_socket -> parl.remote.zmq_utils.create_client_socket

[Function Name Parsing] Starting parsing: Name(id='create_client_socket', ctx=Load())
  Found mapping in from_imports: create_client_socket -> parl.remote.zmq_utils.create_client_socket
Visiting call: create_client_socket (full: parl.remote.zmq_utils.create_client_socket) at line 128
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='ctx', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='worker_address', ctx=Load())
  Keywords: heartbeat_timeout=Constant(value=True)

[Sink Check] Checking function: create_client_socket (full name: parl.remote.zmq_utils.create_client_socket)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='create_client_socket', full name='parl.remote.zmq_utils.create_client_socket'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='create_client_socket', full name='parl.remote.zmq_utils.create_client_socket'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='create_client_socket', full name='parl.remote.zmq_utils.create_client_socket'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='create_client_socket', full name='parl.remote.zmq_utils.create_client_socket'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='create_client_socket', full name='parl.remote.zmq_utils.create_client_socket'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='create_client_socket', full name='parl.remote.zmq_utils.create_client_socket'
    × No match for this pattern
[Sink check result] create_client_socket: Not a sink


[Function Name Parsing] Starting parsing: Name(id='create_server_socket', ctx=Load())
  Found mapping in from_imports: create_server_socket -> parl.remote.zmq_utils.create_server_socket
Checking assignment with function call: create_server_socket (full: parl.remote.zmq_utils.create_server_socket) at line 131

[Function Name Parsing] Starting parsing: Name(id='create_server_socket', ctx=Load())
  Found mapping in from_imports: create_server_socket -> parl.remote.zmq_utils.create_server_socket

[Function Name Parsing] Starting parsing: Name(id='create_server_socket', ctx=Load())
  Found mapping in from_imports: create_server_socket -> parl.remote.zmq_utils.create_server_socket
Visiting call: create_server_socket (full: parl.remote.zmq_utils.create_server_socket) at line 131
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='ctx', ctx=Load())

[Sink Check] Checking function: create_server_socket (full name: parl.remote.zmq_utils.create_server_socket)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='create_server_socket', full name='parl.remote.zmq_utils.create_server_socket'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='create_server_socket', full name='parl.remote.zmq_utils.create_server_socket'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='create_server_socket', full name='parl.remote.zmq_utils.create_server_socket'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='create_server_socket', full name='parl.remote.zmq_utils.create_server_socket'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='create_server_socket', full name='parl.remote.zmq_utils.create_server_socket'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='create_server_socket', full name='parl.remote.zmq_utils.create_server_socket'
    × No match for this pattern
[Sink check result] create_server_socket: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='{}:{}'), attr='format', ctx=Load())
  Complex expression: '{}:{}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='{}:{}'), attr='format', ctx=Load())
  Complex expression: '{}:{}'.format
Checking assignment with function call: '{}:{}'.format (full: None) at line 132

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='{}:{}'), attr='format', ctx=Load())
  Complex expression: '{}:{}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='{}:{}'), attr='format', ctx=Load())
  Complex expression: '{}:{}'.format
Visiting call: '{}:{}'.format (full: None) at line 132
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='job_ip', ctx=Load()), Name(id='port', ctx=Load())

[Sink Check] Checking function: '{}:{}'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
[Sink check result] '{}:{}'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread
Found source assignment: ping_thread = Thread at line 133

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread
Checking assignment with function call: Thread (full: threading.Thread) at line 133
Found source in assignment: FileRead at line 133
Tainted variable 'ping_thread' from source FileRead

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread
Visiting call: Thread (full: threading.Thread) at line 133
  Keywords: target=Attribute(value=Name(id='self', ctx=Load()), attr='_reply_ping', ctx=Load()), args=Tuple(elts=[Name(id='reply_client_ping_socket', ctx=Load())], ctx=Load())
Found source: FileRead at line 133

[Sink Check] Checking function: Thread (full name: threading.Thread)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
[Sink check result] Thread: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='ping_thread', ctx=Load()), attr='setDaemon', ctx=Load())
  Constructed full name: ping_thread.setDaemon
Tracking method call on tainted variable: ping_thread.setDaemon at line 134

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='ping_thread', ctx=Load()), attr='setDaemon', ctx=Load())
  Constructed full name: ping_thread.setDaemon
Visiting call: setDaemon (full: ping_thread.setDaemon) at line 134
  Args: Constant(value=True)
Found source: FileRead at line 134

[Sink Check] Checking function: setDaemon (full name: ping_thread.setDaemon)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='setDaemon', full name='ping_thread.setDaemon'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='setDaemon', full name='ping_thread.setDaemon'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='setDaemon', full name='ping_thread.setDaemon'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='setDaemon', full name='ping_thread.setDaemon'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='setDaemon', full name='ping_thread.setDaemon'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='setDaemon', full name='ping_thread.setDaemon'
    × No match for this pattern
[Sink check result] setDaemon: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='ping_thread', ctx=Load()), attr='start', ctx=Load())
  Constructed full name: ping_thread.start
Tracking method call on tainted variable: ping_thread.start at line 135

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='ping_thread', ctx=Load()), attr='start', ctx=Load())
  Constructed full name: ping_thread.start
Visiting call: start (full: ping_thread.start) at line 135
Found source: FileRead at line 135

[Sink Check] Checking function: start (full name: ping_thread.start)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='start', full name='ping_thread.start'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='start', full name='ping_thread.start'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='start', full name='ping_thread.start'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='start', full name='ping_thread.start'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='start', full name='ping_thread.start'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='start', full name='ping_thread.start'
    × No match for this pattern
[Sink check result] start: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load())
  Constructed full name: logger.warning

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load())
  Constructed full name: logger.warning
Visiting call: warning (full: logger.warning) at line 139
  Args: Constant(value='[Job]lost connection with the worker, will exit')

[Sink Check] Checking function: warning (full name: logger.warning)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
[Sink check result] warning: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='_exit', ctx=Load())
  Constructed full name: os._exit

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='_exit', ctx=Load())
  Constructed full name: os._exit
Visiting call: _exit (full: os._exit) at line 140
  Args: Constant(value=1)

[Sink Check] Checking function: _exit (full name: os._exit)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
[Sink check result] _exit: Not a sink


[Function Name Parsing] Starting parsing: Name(id='HeartbeatServerThread', ctx=Load())
  Found mapping in from_imports: HeartbeatServerThread -> parl.remote.grpc_heartbeat.HeartbeatServerThread
Found source assignment: worker_heartbeat_server_thread = HeartbeatServerThread at line 142

[Function Name Parsing] Starting parsing: Name(id='HeartbeatServerThread', ctx=Load())
  Found mapping in from_imports: HeartbeatServerThread -> parl.remote.grpc_heartbeat.HeartbeatServerThread
Checking assignment with function call: HeartbeatServerThread (full: parl.remote.grpc_heartbeat.HeartbeatServerThread) at line 142
Found source in assignment: FileRead at line 142
Tainted variable 'worker_heartbeat_server_thread' from source FileRead

[Function Name Parsing] Starting parsing: Name(id='HeartbeatServerThread', ctx=Load())
  Found mapping in from_imports: HeartbeatServerThread -> parl.remote.grpc_heartbeat.HeartbeatServerThread

[Function Name Parsing] Starting parsing: Name(id='HeartbeatServerThread', ctx=Load())
  Found mapping in from_imports: HeartbeatServerThread -> parl.remote.grpc_heartbeat.HeartbeatServerThread
Visiting call: HeartbeatServerThread (full: parl.remote.grpc_heartbeat.HeartbeatServerThread) at line 142
  Keywords: heartbeat_exit_callback_func=Name(id='worker_heartbeat_exit_callback_func', ctx=Load())
Found source: FileRead at line 142

[Sink Check] Checking function: HeartbeatServerThread (full name: parl.remote.grpc_heartbeat.HeartbeatServerThread)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='HeartbeatServerThread', full name='parl.remote.grpc_heartbeat.HeartbeatServerThread'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='HeartbeatServerThread', full name='parl.remote.grpc_heartbeat.HeartbeatServerThread'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='HeartbeatServerThread', full name='parl.remote.grpc_heartbeat.HeartbeatServerThread'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='HeartbeatServerThread', full name='parl.remote.grpc_heartbeat.HeartbeatServerThread'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='HeartbeatServerThread', full name='parl.remote.grpc_heartbeat.HeartbeatServerThread'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='HeartbeatServerThread', full name='parl.remote.grpc_heartbeat.HeartbeatServerThread'
    × No match for this pattern
[Sink check result] HeartbeatServerThread: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='worker_heartbeat_server_thread', ctx=Load()), attr='setDaemon', ctx=Load())
  Constructed full name: worker_heartbeat_server_thread.setDaemon
Tracking method call on tainted variable: worker_heartbeat_server_thread.setDaemon at line 144

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='worker_heartbeat_server_thread', ctx=Load()), attr='setDaemon', ctx=Load())
  Constructed full name: worker_heartbeat_server_thread.setDaemon
Visiting call: setDaemon (full: worker_heartbeat_server_thread.setDaemon) at line 144
  Args: Constant(value=True)
Found source: FileRead at line 144

[Sink Check] Checking function: setDaemon (full name: worker_heartbeat_server_thread.setDaemon)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='setDaemon', full name='worker_heartbeat_server_thread.setDaemon'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='setDaemon', full name='worker_heartbeat_server_thread.setDaemon'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='setDaemon', full name='worker_heartbeat_server_thread.setDaemon'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='setDaemon', full name='worker_heartbeat_server_thread.setDaemon'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='setDaemon', full name='worker_heartbeat_server_thread.setDaemon'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='setDaemon', full name='worker_heartbeat_server_thread.setDaemon'
    × No match for this pattern
[Sink check result] setDaemon: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='worker_heartbeat_server_thread', ctx=Load()), attr='start', ctx=Load())
  Constructed full name: worker_heartbeat_server_thread.start
Tracking method call on tainted variable: worker_heartbeat_server_thread.start at line 145

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='worker_heartbeat_server_thread', ctx=Load()), attr='start', ctx=Load())
  Constructed full name: worker_heartbeat_server_thread.start
Visiting call: start (full: worker_heartbeat_server_thread.start) at line 145
Found source: FileRead at line 145

[Sink Check] Checking function: start (full name: worker_heartbeat_server_thread.start)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='start', full name='worker_heartbeat_server_thread.start'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='start', full name='worker_heartbeat_server_thread.start'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='start', full name='worker_heartbeat_server_thread.start'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='start', full name='worker_heartbeat_server_thread.start'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='start', full name='worker_heartbeat_server_thread.start'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='start', full name='worker_heartbeat_server_thread.start'
    × No match for this pattern
[Sink check result] start: Not a sink


[Function Name Parsing] Starting parsing: Name(id='InitializedJob', ctx=Load())
  Found mapping in from_imports: InitializedJob -> parl.remote.message.InitializedJob

[Function Name Parsing] Starting parsing: Name(id='InitializedJob', ctx=Load())
  Found mapping in from_imports: InitializedJob -> parl.remote.message.InitializedJob
Checking assignment with function call: InitializedJob (full: parl.remote.message.InitializedJob) at line 148

[Function Name Parsing] Starting parsing: Name(id='InitializedJob', ctx=Load())
  Found mapping in from_imports: InitializedJob -> parl.remote.message.InitializedJob

[Function Name Parsing] Starting parsing: Name(id='InitializedJob', ctx=Load())
  Found mapping in from_imports: InitializedJob -> parl.remote.message.InitializedJob
Visiting call: InitializedJob (full: parl.remote.message.InitializedJob) at line 148
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='job_address', ctx=Load()), Call(func=Attribute(value=Name(id='worker_heartbeat_server_thread', ctx=Load()), attr='get_address', ctx=Load()), args=[], keywords=[]), Name(id='reply_client_ping_address', ctx=Load()), Constant(value=None), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='job_id', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='log_server_address', ctx=Load())

[Sink Check] Checking function: InitializedJob (full name: parl.remote.message.InitializedJob)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='InitializedJob', full name='parl.remote.message.InitializedJob'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='InitializedJob', full name='parl.remote.message.InitializedJob'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='InitializedJob', full name='parl.remote.message.InitializedJob'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='InitializedJob', full name='parl.remote.message.InitializedJob'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='InitializedJob', full name='parl.remote.message.InitializedJob'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='InitializedJob', full name='parl.remote.message.InitializedJob'
    × No match for this pattern
[Sink check result] InitializedJob: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='worker_heartbeat_server_thread', ctx=Load()), attr='get_address', ctx=Load())
  Constructed full name: worker_heartbeat_server_thread.get_address
Tracking method call on tainted variable: worker_heartbeat_server_thread.get_address at line 148

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='worker_heartbeat_server_thread', ctx=Load()), attr='get_address', ctx=Load())
  Constructed full name: worker_heartbeat_server_thread.get_address
Visiting call: get_address (full: worker_heartbeat_server_thread.get_address) at line 148
Found source: FileRead at line 148
Tracked taint to method chain result: initialized_job

[Sink Check] Checking function: get_address (full name: worker_heartbeat_server_thread.get_address)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='get_address', full name='worker_heartbeat_server_thread.get_address'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='get_address', full name='worker_heartbeat_server_thread.get_address'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='get_address', full name='worker_heartbeat_server_thread.get_address'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='get_address', full name='worker_heartbeat_server_thread.get_address'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='get_address', full name='worker_heartbeat_server_thread.get_address'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='get_address', full name='worker_heartbeat_server_thread.get_address'
    × No match for this pattern
[Sink check result] get_address: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load()), attr='send_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load())
  Constructed full name: self.job_socket
  Handling nested attributes: self.job_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load()), attr='send_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load())
  Constructed full name: self.job_socket
  Handling nested attributes: self.job_socket.send_multipart
Visiting call: send_multipart (full: self.job_socket.send_multipart) at line 153
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='NORMAL_TAG', ctx=Load()), Call(func=Attribute(value=Name(id='cloudpickle', ctx=Load()), attr='dumps', ctx=Load()), args=[Name(id='initialized_job', ctx=Load())], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: self.job_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='self.job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='self.job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='self.job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='self.job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='self.job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='self.job_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='cloudpickle', ctx=Load()), attr='dumps', ctx=Load())
  Constructed full name: cloudpickle.dumps

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='cloudpickle', ctx=Load()), attr='dumps', ctx=Load())
  Constructed full name: cloudpickle.dumps
Visiting call: dumps (full: cloudpickle.dumps) at line 153
  Args: Name(id='initialized_job', ctx=Load())

[Sink Check] Checking function: dumps (full name: cloudpickle.dumps)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='dumps', full name='cloudpickle.dumps'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='dumps', full name='cloudpickle.dumps'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='dumps', full name='cloudpickle.dumps'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='dumps', full name='cloudpickle.dumps'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='dumps', full name='cloudpickle.dumps'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='dumps', full name='cloudpickle.dumps'
    × No match for this pattern
[Sink check result] dumps: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load())
  Constructed full name: self.job_socket
  Handling nested attributes: self.job_socket.recv_multipart
Found source assignment: message = recv_multipart at line 154

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load())
  Constructed full name: self.job_socket
  Handling nested attributes: self.job_socket.recv_multipart
Checking assignment with function call: recv_multipart (full: self.job_socket.recv_multipart) at line 154
Found source in assignment: NetworkInput at line 154
Tainted variable 'message' from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load())
  Constructed full name: self.job_socket
  Handling nested attributes: self.job_socket.recv_multipart
Detected potential recv function: recv_multipart at line 154
  Return value assigned to: message
  Marked message as tainted from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load())
  Constructed full name: self.job_socket
  Handling nested attributes: self.job_socket.recv_multipart
Visiting call: recv_multipart (full: self.job_socket.recv_multipart) at line 154
Found source: NetworkInput at line 154

[Sink Check] Checking function: recv_multipart (full name: self.job_socket.recv_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='recv_multipart', full name='self.job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='recv_multipart', full name='self.job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='recv_multipart', full name='self.job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='recv_multipart', full name='self.job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='recv_multipart', full name='self.job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='recv_multipart', full name='self.job_socket.recv_multipart'
    × No match for this pattern
[Sink check result] recv_multipart: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load())
  Constructed full name: logger.warning

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load())
  Constructed full name: logger.warning
Visiting call: warning (full: logger.warning) at line 156
  Args: BinOp(left=Call(func=Attribute(value=Constant(value='[Job] Cannot connect to the worker {}. '), attr='format', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='worker_address', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='Job will quit.'))

[Sink Check] Checking function: warning (full name: logger.warning)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
[Sink check result] warning: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='[Job] Cannot connect to the worker {}. '), attr='format', ctx=Load())
  Complex expression: '[Job] Cannot connect to the worker {}. '.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='[Job] Cannot connect to the worker {}. '), attr='format', ctx=Load())
  Complex expression: '[Job] Cannot connect to the worker {}. '.format
Visiting call: '[Job] Cannot connect to the worker {}. '.format (full: None) at line 156
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='worker_address', ctx=Load())

[Sink Check] Checking function: '[Job] Cannot connect to the worker {}. '.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''[Job] Cannot connect to the worker {}. '.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''[Job] Cannot connect to the worker {}. '.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''[Job] Cannot connect to the worker {}. '.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''[Job] Cannot connect to the worker {}. '.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''[Job] Cannot connect to the worker {}. '.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''[Job] Cannot connect to the worker {}. '.format', full name='None'
    × No match for this pattern
[Sink check result] '[Job] Cannot connect to the worker {}. '.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load()), attr='close', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load())
  Constructed full name: self.job_socket
  Handling nested attributes: self.job_socket.close

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load()), attr='close', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='job_socket', ctx=Load())
  Constructed full name: self.job_socket
  Handling nested attributes: self.job_socket.close
Visiting call: close (full: self.job_socket.close) at line 157
  Args: Constant(value=0)

[Sink Check] Checking function: close (full name: self.job_socket.close)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='close', full name='self.job_socket.close'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='close', full name='self.job_socket.close'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='close', full name='self.job_socket.close'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='close', full name='self.job_socket.close'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='close', full name='self.job_socket.close'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='close', full name='self.job_socket.close'
    × No match for this pattern
[Sink check result] close: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='_exit', ctx=Load())
  Constructed full name: os._exit

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='_exit', ctx=Load())
  Constructed full name: os._exit
Visiting call: _exit (full: os._exit) at line 158
  Args: Constant(value=0)

[Sink Check] Checking function: _exit (full name: os._exit)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
[Sink check result] _exit: Not a sink

Propagated taint from message[...] to tag at line 160

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Checking assignment with function call: to_str (full: parl.utils.to_str) at line 163

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Visiting call: to_str (full: parl.utils.to_str) at line 163
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=1), ctx=Load())

[Sink Check] Checking function: to_str (full name: parl.utils.to_str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
[Sink check result] to_str: Not a sink


[Function Name Parsing] Starting parsing: Name(id='int', ctx=Load())
  Using simple name: int
Checking assignment with function call: int (full: int) at line 164

[Function Name Parsing] Starting parsing: Name(id='int', ctx=Load())
  Using simple name: int

[Function Name Parsing] Starting parsing: Name(id='int', ctx=Load())
  Using simple name: int
Visiting call: int (full: int) at line 164
  Args: Call(func=Name(id='to_str', ctx=Load()), args=[Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=2), ctx=Load())], keywords=[])

[Sink Check] Checking function: int (full name: int)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='int', full name='int'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='int', full name='int'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='int', full name='int'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='int', full name='int'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='int', full name='int'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='int', full name='int'
    × No match for this pattern
[Sink check result] int: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Visiting call: to_str (full: parl.utils.to_str) at line 164
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=2), ctx=Load())

[Sink Check] Checking function: to_str (full name: parl.utils.to_str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
[Sink check result] to_str: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='worker_heartbeat_server_thread', ctx=Load()), attr='set_host_pid', ctx=Load())
  Constructed full name: worker_heartbeat_server_thread.set_host_pid
Tracking method call on tainted variable: worker_heartbeat_server_thread.set_host_pid at line 165

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='worker_heartbeat_server_thread', ctx=Load()), attr='set_host_pid', ctx=Load())
  Constructed full name: worker_heartbeat_server_thread.set_host_pid
Visiting call: set_host_pid (full: worker_heartbeat_server_thread.set_host_pid) at line 165
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='worker_pid', ctx=Load())
Found source: FileRead at line 165

[Sink Check] Checking function: set_host_pid (full name: worker_heartbeat_server_thread.set_host_pid)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='set_host_pid', full name='worker_heartbeat_server_thread.set_host_pid'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='set_host_pid', full name='worker_heartbeat_server_thread.set_host_pid'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='set_host_pid', full name='worker_heartbeat_server_thread.set_host_pid'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='set_host_pid', full name='worker_heartbeat_server_thread.set_host_pid'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='set_host_pid', full name='worker_heartbeat_server_thread.set_host_pid'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='set_host_pid', full name='worker_heartbeat_server_thread.set_host_pid'
    × No match for this pattern
[Sink check result] set_host_pid: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='ctx', ctx=Load()), attr='socket', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='ctx', ctx=Load())
  Constructed full name: self.ctx
  Handling nested attributes: self.ctx.socket
Checking assignment with function call: socket (full: self.ctx.socket) at line 166

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='ctx', ctx=Load()), attr='socket', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='ctx', ctx=Load())
  Constructed full name: self.ctx
  Handling nested attributes: self.ctx.socket

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='ctx', ctx=Load()), attr='socket', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='ctx', ctx=Load())
  Constructed full name: self.ctx
  Handling nested attributes: self.ctx.socket
Visiting call: socket (full: self.ctx.socket) at line 166
  Args: Attribute(value=Name(id='zmq', ctx=Load()), attr='REQ', ctx=Load())

[Sink Check] Checking function: socket (full name: self.ctx.socket)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='socket', full name='self.ctx.socket'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='socket', full name='self.ctx.socket'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='socket', full name='self.ctx.socket'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='socket', full name='self.ctx.socket'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='socket', full name='self.ctx.socket'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='socket', full name='self.ctx.socket'
    × No match for this pattern
[Sink check result] socket: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='setsockopt', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.setsockopt

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='setsockopt', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.setsockopt
Visiting call: setsockopt (full: self.remove_job_socket.setsockopt) at line 167
  Args: Attribute(value=Name(id='zmq', ctx=Load()), attr='RCVTIMEO', ctx=Load()), BinOp(left=Attribute(value=Name(id='remote_constants', ctx=Load()), attr='HEARTBEAT_TIMEOUT_S', ctx=Load()), op=Mult(), right=Constant(value=1000))

[Sink Check] Checking function: setsockopt (full name: self.remove_job_socket.setsockopt)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='setsockopt', full name='self.remove_job_socket.setsockopt'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='setsockopt', full name='self.remove_job_socket.setsockopt'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='setsockopt', full name='self.remove_job_socket.setsockopt'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='setsockopt', full name='self.remove_job_socket.setsockopt'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='setsockopt', full name='self.remove_job_socket.setsockopt'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='setsockopt', full name='self.remove_job_socket.setsockopt'
    × No match for this pattern
[Sink check result] setsockopt: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='connect', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.connect

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='connect', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.connect
Visiting call: connect (full: self.remove_job_socket.connect) at line 168
  Args: Call(func=Attribute(value=Constant(value='tcp://{}'), attr='format', ctx=Load()), args=[Name(id='remove_job_address', ctx=Load())], keywords=[])

[Sink Check] Checking function: connect (full name: self.remove_job_socket.connect)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='connect', full name='self.remove_job_socket.connect'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='connect', full name='self.remove_job_socket.connect'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='connect', full name='self.remove_job_socket.connect'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='connect', full name='self.remove_job_socket.connect'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='connect', full name='self.remove_job_socket.connect'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='connect', full name='self.remove_job_socket.connect'
    × No match for this pattern
[Sink check result] connect: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='tcp://{}'), attr='format', ctx=Load())
  Complex expression: 'tcp://{}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='tcp://{}'), attr='format', ctx=Load())
  Complex expression: 'tcp://{}'.format
Visiting call: 'tcp://{}'.format (full: None) at line 168
  Args: Name(id='remove_job_address', ctx=Load())

[Sink Check] Checking function: 'tcp://{}'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''tcp://{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''tcp://{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''tcp://{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''tcp://{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''tcp://{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''tcp://{}'.format', full name='None'
    × No match for this pattern
[Sink check result] 'tcp://{}'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load())
  Constructed full name: psutil.Process

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load())
  Constructed full name: psutil.Process
Checking assignment with function call: Process (full: psutil.Process) at line 174

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load())
  Constructed full name: psutil.Process

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load())
  Constructed full name: psutil.Process
Visiting call: Process (full: psutil.Process) at line 174
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())

[Sink Check] Checking function: Process (full name: psutil.Process)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='Process', full name='psutil.Process'
    × No match for this pattern
[Sink check result] Process: Not a sink


[Function Name Parsing] Starting parsing: Name(id='float', ctx=Load())
  Using simple name: float

[Function Name Parsing] Starting parsing: Name(id='float', ctx=Load())
  Using simple name: float
Visiting call: float (full: float) at line 175
  Args: Subscript(value=Call(func=Attribute(value=Name(id='process', ctx=Load()), attr='memory_info', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load())

[Sink Check] Checking function: float (full name: float)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='float', full name='float'
    × No match for this pattern
[Sink check result] float: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='process', ctx=Load()), attr='memory_info', ctx=Load())
  Constructed full name: process.memory_info

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='process', ctx=Load()), attr='memory_info', ctx=Load())
  Constructed full name: process.memory_info
Visiting call: memory_info (full: process.memory_info) at line 175

[Sink Check] Checking function: memory_info (full name: process.memory_info)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='memory_info', full name='process.memory_info'
    × No match for this pattern
[Sink check result] memory_info: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='time', ctx=Load()), attr='sleep', ctx=Load())
  Constructed full name: time.sleep

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='time', ctx=Load()), attr='sleep', ctx=Load())
  Constructed full name: time.sleep
Visiting call: sleep (full: time.sleep) at line 178
  Args: Attribute(value=Name(id='remote_constants', ctx=Load()), attr='HEARTBEAT_INTERVAL_S', ctx=Load())

[Sink Check] Checking function: sleep (full name: time.sleep)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='sleep', full name='time.sleep'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='sleep', full name='time.sleep'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='sleep', full name='time.sleep'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='sleep', full name='time.sleep'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='sleep', full name='time.sleep'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='sleep', full name='time.sleep'
    × No match for this pattern
[Sink check result] sleep: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error
Visiting call: error (full: logger.error) at line 181
  Args: Call(func=Attribute(value=Constant(value='Memory used by this job exceeds {}. This job will exist.'), attr='format', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='max_memory', ctx=Load())], keywords=[])

[Sink Check] Checking function: error (full name: logger.error)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
[Sink check result] error: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='Memory used by this job exceeds {}. This job will exist.'), attr='format', ctx=Load())
  Complex expression: 'Memory used by this job exceeds {}. This job will exist.'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='Memory used by this job exceeds {}. This job will exist.'), attr='format', ctx=Load())
  Complex expression: 'Memory used by this job exceeds {}. This job will exist.'.format
Visiting call: 'Memory used by this job exceeds {}. This job will exist.'.format (full: None) at line 181
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='max_memory', ctx=Load())

[Sink Check] Checking function: 'Memory used by this job exceeds {}. This job will exist.'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''Memory used by this job exceeds {}. This job will exist.'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''Memory used by this job exceeds {}. This job will exist.'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''Memory used by this job exceeds {}. This job will exist.'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''Memory used by this job exceeds {}. This job will exist.'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''Memory used by this job exceeds {}. This job will exist.'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''Memory used by this job exceeds {}. This job will exist.'.format', full name='None'
    × No match for this pattern
[Sink check result] 'Memory used by this job exceeds {}. This job will exist.'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='Job {} exceeds max memory usage, will stop this job.'), attr='format', ctx=Load())
  Complex expression: 'Job {} exceeds max memory usage, will stop this job.'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='Job {} exceeds max memory usage, will stop this job.'), attr='format', ctx=Load())
  Complex expression: 'Job {} exceeds max memory usage, will stop this job.'.format
Checking assignment with function call: 'Job {} exceeds max memory usage, will stop this job.'.format (full: None) at line 183

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='Job {} exceeds max memory usage, will stop this job.'), attr='format', ctx=Load())
  Complex expression: 'Job {} exceeds max memory usage, will stop this job.'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='Job {} exceeds max memory usage, will stop this job.'), attr='format', ctx=Load())
  Complex expression: 'Job {} exceeds max memory usage, will stop this job.'.format
Visiting call: 'Job {} exceeds max memory usage, will stop this job.'.format (full: None) at line 183
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='job_address', ctx=Load())

[Sink Check] Checking function: 'Job {} exceeds max memory usage, will stop this job.'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''Job {} exceeds max memory usage, will stop this job.'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''Job {} exceeds max memory usage, will stop this job.'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''Job {} exceeds max memory usage, will stop this job.'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''Job {} exceeds max memory usage, will stop this job.'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''Job {} exceeds max memory usage, will stop this job.'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''Job {} exceeds max memory usage, will stop this job.'.format', full name='None'
    × No match for this pattern
[Sink check result] 'Job {} exceeds max memory usage, will stop this job.'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load()), attr='stop', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load())
  Constructed full name: self.client_heartbeat_client_thread
  Handling nested attributes: self.client_heartbeat_client_thread.stop

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load()), attr='stop', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load())
  Constructed full name: self.client_heartbeat_client_thread
  Handling nested attributes: self.client_heartbeat_client_thread.stop
Visiting call: stop (full: self.client_heartbeat_client_thread.stop) at line 184
  Args: Attribute(value=Name(id='remote_constants', ctx=Load()), attr='HEARTBEAT_OUT_OF_MEMORY_TAG', ctx=Load()), Name(id='stop_message', ctx=Load())
Found source: FileRead at line 184

[Sink Check] Checking function: stop (full name: self.client_heartbeat_client_thread.stop)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='stop', full name='self.client_heartbeat_client_thread.stop'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='stop', full name='self.client_heartbeat_client_thread.stop'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='stop', full name='self.client_heartbeat_client_thread.stop'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='stop', full name='self.client_heartbeat_client_thread.stop'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='stop', full name='self.client_heartbeat_client_thread.stop'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='stop', full name='self.client_heartbeat_client_thread.stop'
    × No match for this pattern
[Sink check result] stop: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='send_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='send_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.send_multipart
Visiting call: send_multipart (full: self.remove_job_socket.send_multipart) at line 187
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='KILLJOB_TAG', ctx=Load()), Call(func=Name(id='to_byte', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='job_address', ctx=Load())], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: self.remove_job_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte

[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte
Visiting call: to_byte (full: parl.utils.to_byte) at line 187
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='job_address', ctx=Load())

[Sink Check] Checking function: to_byte (full name: parl.utils.to_byte)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
[Sink check result] to_byte: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Found source assignment: _ = recv_multipart at line 189

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Checking assignment with function call: recv_multipart (full: self.remove_job_socket.recv_multipart) at line 189
Found source in assignment: NetworkInput at line 189
Tainted variable '_' from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Detected potential recv function: recv_multipart at line 189
  Return value assigned to: _
  Marked _ as tainted from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Visiting call: recv_multipart (full: self.remove_job_socket.recv_multipart) at line 189
Found source: NetworkInput at line 189

[Sink Check] Checking function: recv_multipart (full name: self.remove_job_socket.recv_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
[Sink check result] recv_multipart: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='_exit', ctx=Load())
  Constructed full name: os._exit

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='_exit', ctx=Load())
  Constructed full name: os._exit
Visiting call: _exit (full: os._exit) at line 192
  Args: Constant(value=1)

[Sink Check] Checking function: _exit (full name: os._exit)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
[Sink check result] _exit: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: socket.recv_multipart
Found source assignment: message = recv_multipart at line 198

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: socket.recv_multipart
Checking assignment with function call: recv_multipart (full: socket.recv_multipart) at line 198
Found source in assignment: NetworkInput at line 198
Tainted variable 'message' from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: socket.recv_multipart
Detected potential recv function: recv_multipart at line 198
  Return value assigned to: message
  Marked message as tainted from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: socket.recv_multipart
Visiting call: recv_multipart (full: socket.recv_multipart) at line 198
Found source: NetworkInput at line 198

[Sink Check] Checking function: recv_multipart (full name: socket.recv_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='recv_multipart', full name='socket.recv_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='recv_multipart', full name='socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='recv_multipart', full name='socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='recv_multipart', full name='socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='recv_multipart', full name='socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='recv_multipart', full name='socket.recv_multipart'
    × No match for this pattern
[Sink check result] recv_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Checking assignment with function call: to_str (full: parl.utils.to_str) at line 199

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Visiting call: to_str (full: parl.utils.to_str) at line 199
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=1), ctx=Load())

[Sink Check] Checking function: to_str (full name: parl.utils.to_str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
[Sink check result] to_str: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Checking assignment with function call: to_str (full: parl.utils.to_str) at line 200

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Visiting call: to_str (full: parl.utils.to_str) at line 200
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=2), ctx=Load())

[Sink Check] Checking function: to_str (full name: parl.utils.to_str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
[Sink check result] to_str: Not a sink


[Function Name Parsing] Starting parsing: Name(id='float', ctx=Load())
  Using simple name: float
Checking assignment with function call: float (full: float) at line 202

[Function Name Parsing] Starting parsing: Name(id='float', ctx=Load())
  Using simple name: float

[Function Name Parsing] Starting parsing: Name(id='float', ctx=Load())
  Using simple name: float
Visiting call: float (full: float) at line 202
  Args: Name(id='max_memory', ctx=Load())

[Sink Check] Checking function: float (full name: float)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='float', full name='float'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='float', full name='float'
    × No match for this pattern
[Sink check result] float: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Checking assignment with function call: to_str (full: parl.utils.to_str) at line 203

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Visiting call: to_str (full: parl.utils.to_str) at line 203
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=3), ctx=Load())

[Sink Check] Checking function: to_str (full name: parl.utils.to_str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
[Sink check result] to_str: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Checking assignment with function call: to_str (full: parl.utils.to_str) at line 204

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Visiting call: to_str (full: parl.utils.to_str) at line 204
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=4), ctx=Load())

[Sink Check] Checking function: to_str (full name: parl.utils.to_str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
[Sink check result] to_str: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: socket.send_multipart
Visiting call: send_multipart (full: socket.send_multipart) at line 205
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='HEARTBEAT_TAG', ctx=Load())], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='send_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='send_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.send_multipart
Visiting call: send_multipart (full: self.remove_job_socket.send_multipart) at line 209
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='KILLJOB_TAG', ctx=Load()), Call(func=Name(id='to_byte', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='job_address', ctx=Load())], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: self.remove_job_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='self.remove_job_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte

[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte
Visiting call: to_byte (full: parl.utils.to_byte) at line 209
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='job_address', ctx=Load())

[Sink Check] Checking function: to_byte (full name: parl.utils.to_byte)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
[Sink check result] to_byte: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Found source assignment: _ = recv_multipart at line 211

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Checking assignment with function call: recv_multipart (full: self.remove_job_socket.recv_multipart) at line 211
Found source in assignment: NetworkInput at line 211
Tainted variable '_' from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Detected potential recv function: recv_multipart at line 211
  Return value assigned to: _
  Marked _ as tainted from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load()), attr='recv_multipart', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='remove_job_socket', ctx=Load())
  Constructed full name: self.remove_job_socket
  Handling nested attributes: self.remove_job_socket.recv_multipart
Visiting call: recv_multipart (full: self.remove_job_socket.recv_multipart) at line 211
Found source: NetworkInput at line 211

[Sink Check] Checking function: recv_multipart (full name: self.remove_job_socket.recv_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='recv_multipart', full name='self.remove_job_socket.recv_multipart'
    × No match for this pattern
[Sink check result] recv_multipart: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load())
  Constructed full name: logger.warning

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load())
  Constructed full name: logger.warning
Visiting call: warning (full: logger.warning) at line 214
  Args: Constant(value='[Job] lost connection with the client. This job will exit.')

[Sink Check] Checking function: warning (full name: logger.warning)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
[Sink check result] warning: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='_exit', ctx=Load())
  Constructed full name: os._exit

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='_exit', ctx=Load())
  Constructed full name: os._exit
Visiting call: _exit (full: os._exit) at line 215
  Args: Constant(value=1)

[Sink Check] Checking function: _exit (full name: os._exit)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='_exit', full name='os._exit'
    × No match for this pattern
[Sink check result] _exit: Not a sink


[Function Name Parsing] Starting parsing: Name(id='HeartbeatClientThread', ctx=Load())
  Found mapping in from_imports: HeartbeatClientThread -> parl.remote.grpc_heartbeat.HeartbeatClientThread
Checking assignment with function call: HeartbeatClientThread (full: parl.remote.grpc_heartbeat.HeartbeatClientThread) at line 218
Found source in assignment: FileRead at line 218

[Function Name Parsing] Starting parsing: Name(id='HeartbeatClientThread', ctx=Load())
  Found mapping in from_imports: HeartbeatClientThread -> parl.remote.grpc_heartbeat.HeartbeatClientThread

[Function Name Parsing] Starting parsing: Name(id='HeartbeatClientThread', ctx=Load())
  Found mapping in from_imports: HeartbeatClientThread -> parl.remote.grpc_heartbeat.HeartbeatClientThread
Visiting call: HeartbeatClientThread (full: parl.remote.grpc_heartbeat.HeartbeatClientThread) at line 218
  Keywords: client_id=Attribute(value=Name(id='self', ctx=Load()), attr='instance_id', ctx=Load()), heartbeat_server_addr=Name(id='client_heartbeat_server_addr', ctx=Load()), heartbeat_exit_callback_func=Name(id='client_heartbeat_exit_callback_func', ctx=Load())
Found source: FileRead at line 218

[Sink Check] Checking function: HeartbeatClientThread (full name: parl.remote.grpc_heartbeat.HeartbeatClientThread)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='HeartbeatClientThread', full name='parl.remote.grpc_heartbeat.HeartbeatClientThread'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='HeartbeatClientThread', full name='parl.remote.grpc_heartbeat.HeartbeatClientThread'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='HeartbeatClientThread', full name='parl.remote.grpc_heartbeat.HeartbeatClientThread'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='HeartbeatClientThread', full name='parl.remote.grpc_heartbeat.HeartbeatClientThread'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='HeartbeatClientThread', full name='parl.remote.grpc_heartbeat.HeartbeatClientThread'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='HeartbeatClientThread', full name='parl.remote.grpc_heartbeat.HeartbeatClientThread'
    × No match for this pattern
[Sink check result] HeartbeatClientThread: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load()), attr='setDaemon', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load())
  Constructed full name: self.client_heartbeat_client_thread
  Handling nested attributes: self.client_heartbeat_client_thread.setDaemon

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load()), attr='setDaemon', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load())
  Constructed full name: self.client_heartbeat_client_thread
  Handling nested attributes: self.client_heartbeat_client_thread.setDaemon
Visiting call: setDaemon (full: self.client_heartbeat_client_thread.setDaemon) at line 222
  Args: Constant(value=True)
Found source: FileRead at line 222

[Sink Check] Checking function: setDaemon (full name: self.client_heartbeat_client_thread.setDaemon)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='setDaemon', full name='self.client_heartbeat_client_thread.setDaemon'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='setDaemon', full name='self.client_heartbeat_client_thread.setDaemon'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='setDaemon', full name='self.client_heartbeat_client_thread.setDaemon'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='setDaemon', full name='self.client_heartbeat_client_thread.setDaemon'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='setDaemon', full name='self.client_heartbeat_client_thread.setDaemon'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='setDaemon', full name='self.client_heartbeat_client_thread.setDaemon'
    × No match for this pattern
[Sink check result] setDaemon: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load()), attr='start', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load())
  Constructed full name: self.client_heartbeat_client_thread
  Handling nested attributes: self.client_heartbeat_client_thread.start

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load()), attr='start', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='client_heartbeat_client_thread', ctx=Load())
  Constructed full name: self.client_heartbeat_client_thread
  Handling nested attributes: self.client_heartbeat_client_thread.start
Visiting call: start (full: self.client_heartbeat_client_thread.start) at line 223
Found source: FileRead at line 223

[Sink Check] Checking function: start (full name: self.client_heartbeat_client_thread.start)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='start', full name='self.client_heartbeat_client_thread.start'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='start', full name='self.client_heartbeat_client_thread.start'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='start', full name='self.client_heartbeat_client_thread.start'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='start', full name='self.client_heartbeat_client_thread.start'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='start', full name='self.client_heartbeat_client_thread.start'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='start', full name='self.client_heartbeat_client_thread.start'
    × No match for this pattern
[Sink check result] start: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread
Found source assignment: memory_monitor_thread = Thread at line 225

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread
Checking assignment with function call: Thread (full: threading.Thread) at line 225
Found source in assignment: FileRead at line 225
Tainted variable 'memory_monitor_thread' from source FileRead

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load())
  Constructed full name: threading.Thread
Visiting call: Thread (full: threading.Thread) at line 225
  Keywords: target=Attribute(value=Name(id='self', ctx=Load()), attr='_check_used_memory', ctx=Load())
Found source: FileRead at line 225

[Sink Check] Checking function: Thread (full name: threading.Thread)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='Thread', full name='threading.Thread'
    × No match for this pattern
[Sink check result] Thread: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='memory_monitor_thread', ctx=Load()), attr='setDaemon', ctx=Load())
  Constructed full name: memory_monitor_thread.setDaemon
Tracking method call on tainted variable: memory_monitor_thread.setDaemon at line 226

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='memory_monitor_thread', ctx=Load()), attr='setDaemon', ctx=Load())
  Constructed full name: memory_monitor_thread.setDaemon
Visiting call: setDaemon (full: memory_monitor_thread.setDaemon) at line 226
  Args: Constant(value=True)
Found source: FileRead at line 226

[Sink Check] Checking function: setDaemon (full name: memory_monitor_thread.setDaemon)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='setDaemon', full name='memory_monitor_thread.setDaemon'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='setDaemon', full name='memory_monitor_thread.setDaemon'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='setDaemon', full name='memory_monitor_thread.setDaemon'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='setDaemon', full name='memory_monitor_thread.setDaemon'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='setDaemon', full name='memory_monitor_thread.setDaemon'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='setDaemon', full name='memory_monitor_thread.setDaemon'
    × No match for this pattern
[Sink check result] setDaemon: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='memory_monitor_thread', ctx=Load()), attr='start', ctx=Load())
  Constructed full name: memory_monitor_thread.start
Tracking method call on tainted variable: memory_monitor_thread.start at line 227

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='memory_monitor_thread', ctx=Load()), attr='start', ctx=Load())
  Constructed full name: memory_monitor_thread.start
Visiting call: start (full: memory_monitor_thread.start) at line 227
Found source: FileRead at line 227

[Sink Check] Checking function: start (full name: memory_monitor_thread.start)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='start', full name='memory_monitor_thread.start'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='start', full name='memory_monitor_thread.start'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='start', full name='memory_monitor_thread.start'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='start', full name='memory_monitor_thread.start'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='start', full name='memory_monitor_thread.start'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='start', full name='memory_monitor_thread.start'
    × No match for this pattern
[Sink check result] start: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='socket', ctx=Load()), attr='close', ctx=Load())
  Constructed full name: socket.close

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='socket', ctx=Load()), attr='close', ctx=Load())
  Constructed full name: socket.close
Visiting call: close (full: socket.close) at line 229
  Args: Constant(value=0)

[Sink Check] Checking function: close (full name: socket.close)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='close', full name='socket.close'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='close', full name='socket.close'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='close', full name='socket.close'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='close', full name='socket.close'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='close', full name='socket.close'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='close', full name='socket.close'
    × No match for this pattern
[Sink check result] close: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Found source assignment: message = recv_multipart at line 247

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Checking assignment with function call: recv_multipart (full: reply_socket.recv_multipart) at line 247
Found source in assignment: NetworkInput at line 247
Tainted variable 'message' from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Detected potential recv function: recv_multipart at line 247
  Return value assigned to: message
  Marked message as tainted from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Visiting call: recv_multipart (full: reply_socket.recv_multipart) at line 247
Found source: NetworkInput at line 247

[Sink Check] Checking function: recv_multipart (full name: reply_socket.recv_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
[Sink check result] recv_multipart: Not a sink

Propagated taint from message[...] to tag at line 248

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='pickle', ctx=Load()), attr='loads', ctx=Load())
  Constructed full name: pickle.loads

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='pickle', ctx=Load()), attr='loads', ctx=Load())
  Constructed full name: pickle.loads
Checking assignment with function call: loads (full: pickle.loads) at line 250

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='pickle', ctx=Load()), attr='loads', ctx=Load())
  Constructed full name: pickle.loads

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='pickle', ctx=Load()), attr='loads', ctx=Load())
  Constructed full name: pickle.loads
Visiting call: loads (full: pickle.loads) at line 250
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=1), ctx=Load())

[Sink Check] Checking function: loads (full name: pickle.loads)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='loads', full name='pickle.loads'
    ✓ Match successful: Full name contains pattern - pickle.load in pickle.loads

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='pickle', ctx=Load()), attr='loads', ctx=Load())
  Constructed full name: pickle.loads
No tainted arguments found for sink 'PickleDeserialization' at line 250
  Arguments: None
  Known tainted variables: ['th', '_', 'ping_thread', 'worker_heartbeat_server_thread', 'initialized_job', 'message', 'tag', 'memory_monitor_thread']

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='tempfile', ctx=Load()), attr='mkdtemp', ctx=Load())
  Constructed full name: tempfile.mkdtemp

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='tempfile', ctx=Load()), attr='mkdtemp', ctx=Load())
  Constructed full name: tempfile.mkdtemp
Checking assignment with function call: mkdtemp (full: tempfile.mkdtemp) at line 251

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='tempfile', ctx=Load()), attr='mkdtemp', ctx=Load())
  Constructed full name: tempfile.mkdtemp

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='tempfile', ctx=Load()), attr='mkdtemp', ctx=Load())
  Constructed full name: tempfile.mkdtemp
Visiting call: mkdtemp (full: tempfile.mkdtemp) at line 251

[Sink Check] Checking function: mkdtemp (full name: tempfile.mkdtemp)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='mkdtemp', full name='tempfile.mkdtemp'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='mkdtemp', full name='tempfile.mkdtemp'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='mkdtemp', full name='tempfile.mkdtemp'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='mkdtemp', full name='tempfile.mkdtemp'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='mkdtemp', full name='tempfile.mkdtemp'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='mkdtemp', full name='tempfile.mkdtemp'
    × No match for this pattern
[Sink check result] mkdtemp: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Checking assignment with function call: join (full: os.path.join) at line 254

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Visiting call: join (full: os.path.join) at line 254
  Args: Name(id='envdir', ctx=Load()), Name(id='empty_subfolder', ctx=Load())

[Sink Check] Checking function: join (full name: os.path.join)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
[Sink check result] join: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load())
  Constructed full name: os.makedirs

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load())
  Constructed full name: os.makedirs
Visiting call: makedirs (full: os.makedirs) at line 256
  Args: Name(id='empty_subfolder_path', ctx=Load())

[Sink Check] Checking function: makedirs (full name: os.makedirs)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
[Sink check result] makedirs: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Subscript(value=Name(id='pyfiles', ctx=Load()), slice=Constant(value='python_files'), ctx=Load()), attr='items', ctx=Load())
  Complex expression: pyfiles['python_files'].items

[Function Name Parsing] Starting parsing: Attribute(value=Subscript(value=Name(id='pyfiles', ctx=Load()), slice=Constant(value='python_files'), ctx=Load()), attr='items', ctx=Load())
  Complex expression: pyfiles['python_files'].items
Visiting call: pyfiles['python_files'].items (full: None) at line 259

[Sink Check] Checking function: pyfiles['python_files'].items (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='pyfiles['python_files'].items', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='pyfiles['python_files'].items', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='pyfiles['python_files'].items', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='pyfiles['python_files'].items', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='pyfiles['python_files'].items', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='pyfiles['python_files'].items', full name='None'
    × No match for this pattern
[Sink check result] pyfiles['python_files'].items: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Checking assignment with function call: join (full: os.path.join) at line 260

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Visiting call: join (full: os.path.join) at line 260
  Args: Name(id='envdir', ctx=Load()), Name(id='file', ctx=Load())

[Sink Check] Checking function: join (full name: os.path.join)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
[Sink check result] join: Not a sink


[Function Name Parsing] Starting parsing: Name(id='open', ctx=Load())
  Using simple name: open

[Function Name Parsing] Starting parsing: Name(id='open', ctx=Load())
  Using simple name: open

[Function Name Parsing] Starting parsing: Name(id='open', ctx=Load())
  Using simple name: open
Visiting call: open (full: open) at line 261
  Args: Name(id='file', ctx=Load()), Constant(value='wb')
Found source: FileRead at line 261

[Sink Check] Checking function: open (full name: open)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='open', full name='open'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='open', full name='open'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='open', full name='open'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='open', full name='open'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='open', full name='open'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='open', full name='open'
    × No match for this pattern
[Sink check result] open: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='code_file', ctx=Load()), attr='write', ctx=Load())
  Constructed full name: code_file.write

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='code_file', ctx=Load()), attr='write', ctx=Load())
  Constructed full name: code_file.write
Visiting call: write (full: code_file.write) at line 262
  Args: Name(id='code', ctx=Load())

[Sink Check] Checking function: write (full name: code_file.write)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='write', full name='code_file.write'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='write', full name='code_file.write'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='write', full name='code_file.write'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='write', full name='code_file.write'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='write', full name='code_file.write'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='write', full name='code_file.write'
    × No match for this pattern
[Sink check result] write: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Subscript(value=Name(id='pyfiles', ctx=Load()), slice=Constant(value='other_files'), ctx=Load()), attr='items', ctx=Load())
  Complex expression: pyfiles['other_files'].items

[Function Name Parsing] Starting parsing: Attribute(value=Subscript(value=Name(id='pyfiles', ctx=Load()), slice=Constant(value='other_files'), ctx=Load()), attr='items', ctx=Load())
  Complex expression: pyfiles['other_files'].items
Visiting call: pyfiles['other_files'].items (full: None) at line 265

[Sink Check] Checking function: pyfiles['other_files'].items (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='pyfiles['other_files'].items', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='pyfiles['other_files'].items', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='pyfiles['other_files'].items', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='pyfiles['other_files'].items', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='pyfiles['other_files'].items', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='pyfiles['other_files'].items', full name='None'
    × No match for this pattern
[Sink check result] pyfiles['other_files'].items: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Checking assignment with function call: join (full: os.path.join) at line 270

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Visiting call: join (full: os.path.join) at line 270
  Args: Starred(value=Subscript(value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='split', ctx=Load()), args=[Name(id='sep', ctx=Load())], keywords=[]), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), ctx=Load())

[Sink Check] Checking function: join (full name: os.path.join)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
[Sink check result] join: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='file', ctx=Load()), attr='split', ctx=Load())
  Constructed full name: file.split

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='file', ctx=Load()), attr='split', ctx=Load())
  Constructed full name: file.split
Visiting call: split (full: file.split) at line 270
  Args: Name(id='sep', ctx=Load())

[Sink Check] Checking function: split (full name: file.split)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='split', full name='file.split'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='split', full name='file.split'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='split', full name='file.split'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='split', full name='file.split'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='split', full name='file.split'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='split', full name='file.split'
    × No match for this pattern
[Sink check result] split: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Checking assignment with function call: join (full: os.path.join) at line 271

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Visiting call: join (full: os.path.join) at line 271
  Args: Name(id='envdir', ctx=Load()), Name(id='recursive_dirs', ctx=Load())

[Sink Check] Checking function: join (full name: os.path.join)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
[Sink check result] join: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load())
  Constructed full name: os.makedirs

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load())
  Constructed full name: os.makedirs
Visiting call: makedirs (full: os.makedirs) at line 272
  Args: Name(id='recursive_dirs', ctx=Load())

[Sink Check] Checking function: makedirs (full name: os.makedirs)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='makedirs', full name='os.makedirs'
    × No match for this pattern
[Sink check result] makedirs: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Checking assignment with function call: join (full: os.path.join) at line 275

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Visiting call: join (full: os.path.join) at line 275
  Args: Name(id='envdir', ctx=Load()), Name(id='file', ctx=Load())

[Sink Check] Checking function: join (full name: os.path.join)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
[Sink check result] join: Not a sink


[Function Name Parsing] Starting parsing: Name(id='open', ctx=Load())
  Using simple name: open

[Function Name Parsing] Starting parsing: Name(id='open', ctx=Load())
  Using simple name: open

[Function Name Parsing] Starting parsing: Name(id='open', ctx=Load())
  Using simple name: open
Visiting call: open (full: open) at line 276
  Args: Name(id='file', ctx=Load()), Constant(value='wb')
Found source: FileRead at line 276

[Sink Check] Checking function: open (full name: open)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='open', full name='open'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='open', full name='open'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='open', full name='open'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='open', full name='open'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='open', full name='open'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='open', full name='open'
    × No match for this pattern
[Sink check result] open: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load())
  Constructed full name: f.write

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load())
  Constructed full name: f.write
Visiting call: write (full: f.write) at line 277
  Args: Name(id='content', ctx=Load())

[Sink Check] Checking function: write (full name: f.write)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='write', full name='f.write'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='write', full name='f.write'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='write', full name='f.write'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='write', full name='f.write'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='write', full name='f.write'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='write', full name='f.write'
    × No match for this pattern
[Sink check result] write: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 278
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='NORMAL_TAG', ctx=Load())], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error
Visiting call: error (full: logger.error) at line 281
  Args: Call(func=Attribute(value=Constant(value='NotImplementedError:{}, received tag:{}'), attr='format', ctx=Load()), args=[Name(id='job_address', ctx=Load()), Name(id='tag', ctx=Load())], keywords=[])

[Sink Check] Checking function: error (full name: logger.error)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
[Sink check result] error: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='NotImplementedError:{}, received tag:{}'), attr='format', ctx=Load())
  Complex expression: 'NotImplementedError:{}, received tag:{}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='NotImplementedError:{}, received tag:{}'), attr='format', ctx=Load())
  Complex expression: 'NotImplementedError:{}, received tag:{}'.format
Visiting call: 'NotImplementedError:{}, received tag:{}'.format (full: None) at line 281
  Args: Name(id='job_address', ctx=Load()), Name(id='tag', ctx=Load())

[Sink Check] Checking function: 'NotImplementedError:{}, received tag:{}'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''NotImplementedError:{}, received tag:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''NotImplementedError:{}, received tag:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''NotImplementedError:{}, received tag:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''NotImplementedError:{}, received tag:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''NotImplementedError:{}, received tag:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''NotImplementedError:{}, received tag:{}'.format', full name='None'
    × No match for this pattern
[Sink check result] 'NotImplementedError:{}, received tag:{}'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Found source assignment: message = recv_multipart at line 298

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Checking assignment with function call: recv_multipart (full: reply_socket.recv_multipart) at line 298
Found source in assignment: NetworkInput at line 298
Tainted variable 'message' from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Detected potential recv function: recv_multipart at line 298
  Return value assigned to: message
  Marked message as tainted from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Visiting call: recv_multipart (full: reply_socket.recv_multipart) at line 298
Found source: NetworkInput at line 298

[Sink Check] Checking function: recv_multipart (full name: reply_socket.recv_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
[Sink check result] recv_multipart: Not a sink

Propagated taint from message[...] to tag at line 299

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='importlib', ctx=Load()), attr='reload', ctx=Load())
  Constructed full name: importlib.reload

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='importlib', ctx=Load()), attr='reload', ctx=Load())
  Constructed full name: importlib.reload
Visiting call: reload (full: importlib.reload) at line 307
  Args: Name(id='parl', ctx=Load())

[Sink Check] Checking function: reload (full name: importlib.reload)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='reload', full name='importlib.reload'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='reload', full name='importlib.reload'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='reload', full name='importlib.reload'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='reload', full name='importlib.reload'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='reload', full name='importlib.reload'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='reload', full name='importlib.reload'
    × No match for this pattern
[Sink check result] reload: Not a sink


[Function Name Parsing] Starting parsing: Name(id='load_remote_class', ctx=Load())
  Found mapping in from_imports: load_remote_class -> parl.remote.remote_class_serialization.load_remote_class

[Function Name Parsing] Starting parsing: Name(id='load_remote_class', ctx=Load())
  Found mapping in from_imports: load_remote_class -> parl.remote.remote_class_serialization.load_remote_class
Checking assignment with function call: load_remote_class (full: parl.remote.remote_class_serialization.load_remote_class) at line 308

[Function Name Parsing] Starting parsing: Name(id='load_remote_class', ctx=Load())
  Found mapping in from_imports: load_remote_class -> parl.remote.remote_class_serialization.load_remote_class

[Function Name Parsing] Starting parsing: Name(id='load_remote_class', ctx=Load())
  Found mapping in from_imports: load_remote_class -> parl.remote.remote_class_serialization.load_remote_class
Visiting call: load_remote_class (full: parl.remote.remote_class_serialization.load_remote_class) at line 308
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=1), ctx=Load())

[Sink Check] Checking function: load_remote_class (full name: parl.remote.remote_class_serialization.load_remote_class)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='load_remote_class', full name='parl.remote.remote_class_serialization.load_remote_class'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='load_remote_class', full name='parl.remote.remote_class_serialization.load_remote_class'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='load_remote_class', full name='parl.remote.remote_class_serialization.load_remote_class'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='load_remote_class', full name='parl.remote.remote_class_serialization.load_remote_class'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='load_remote_class', full name='parl.remote.remote_class_serialization.load_remote_class'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='load_remote_class', full name='parl.remote.remote_class_serialization.load_remote_class'
    × No match for this pattern
[Sink check result] load_remote_class: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='cloudpickle', ctx=Load()), attr='loads', ctx=Load())
  Constructed full name: cloudpickle.loads
Checking assignment with function call: loads (full: cloudpickle.loads) at line 309

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='cloudpickle', ctx=Load()), attr='loads', ctx=Load())
  Constructed full name: cloudpickle.loads

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='cloudpickle', ctx=Load()), attr='loads', ctx=Load())
  Constructed full name: cloudpickle.loads
Visiting call: loads (full: cloudpickle.loads) at line 309
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=2), ctx=Load())

[Sink Check] Checking function: loads (full name: cloudpickle.loads)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='loads', full name='cloudpickle.loads'
    ✓ Match successful: Full name contains pattern - pickle.load in cloudpickle.loads

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='cloudpickle', ctx=Load()), attr='loads', ctx=Load())
  Constructed full name: cloudpickle.loads
No tainted arguments found for sink 'PickleDeserialization' at line 309
  Arguments: None
  Known tainted variables: ['th', '_', 'ping_thread', 'worker_heartbeat_server_thread', 'initialized_job', 'message', 'tag', 'memory_monitor_thread']

[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file

[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file

[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file
Visiting call: redirect_output_to_file (full: parl.remote.utils.redirect_output_to_file) at line 310
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='logfile_path', ctx=Load()), Attribute(value=Name(id='os', ctx=Load()), attr='devnull', ctx=Load())

[Sink Check] Checking function: redirect_output_to_file (full name: parl.remote.utils.redirect_output_to_file)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
[Sink check result] redirect_output_to_file: Not a sink


[Function Name Parsing] Starting parsing: Name(id='cls', ctx=Load())
  Using simple name: cls

[Function Name Parsing] Starting parsing: Name(id='cls', ctx=Load())
  Using simple name: cls
Checking assignment with function call: cls (full: cls) at line 311

[Function Name Parsing] Starting parsing: Name(id='cls', ctx=Load())
  Using simple name: cls

[Function Name Parsing] Starting parsing: Name(id='cls', ctx=Load())
  Using simple name: cls
Visiting call: cls (full: cls) at line 311
  Args: Starred(value=Name(id='args', ctx=Load()), ctx=Load())
  Keywords: None=Name(id='kwargs', ctx=Load())

[Sink Check] Checking function: cls (full name: cls)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='cls', full name='cls'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='cls', full name='cls'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='cls', full name='cls'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='cls', full name='cls'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='cls', full name='cls'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='cls', full name='cls'
    × No match for this pattern
[Sink check result] cls: Not a sink


[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str
Checking assignment with function call: str (full: str) at line 313

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str
Visiting call: str (full: str) at line 313
  Args: Call(func=Attribute(value=Name(id='traceback', ctx=Load()), attr='format_exc', ctx=Load()), args=[], keywords=[])

[Sink Check] Checking function: str (full name: str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
[Sink check result] str: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='traceback', ctx=Load()), attr='format_exc', ctx=Load())
  Constructed full name: traceback.format_exc

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='traceback', ctx=Load()), attr='format_exc', ctx=Load())
  Constructed full name: traceback.format_exc
Visiting call: format_exc (full: traceback.format_exc) at line 313

[Sink Check] Checking function: format_exc (full name: traceback.format_exc)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
[Sink check result] format_exc: Not a sink


[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str
Checking assignment with function call: str (full: str) at line 314

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str
Visiting call: str (full: str) at line 314
  Args: Name(id='e', ctx=Load())

[Sink Check] Checking function: str (full name: str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
[Sink check result] str: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error
Visiting call: error (full: logger.error) at line 315
  Args: Call(func=Attribute(value=Constant(value='traceback:\n{}'), attr='format', ctx=Load()), args=[Name(id='traceback_str', ctx=Load())], keywords=[])

[Sink Check] Checking function: error (full name: logger.error)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
[Sink check result] error: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='traceback:\n{}'), attr='format', ctx=Load())
  Complex expression: 'traceback:\n{}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='traceback:\n{}'), attr='format', ctx=Load())
  Complex expression: 'traceback:\n{}'.format
Visiting call: 'traceback:\n{}'.format (full: None) at line 315
  Args: Name(id='traceback_str', ctx=Load())

[Sink Check] Checking function: 'traceback:\n{}'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
[Sink check result] 'traceback:\n{}'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 316
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='EXCEPTION_TAG', ctx=Load()), Call(func=Name(id='to_byte', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='error_str', ctx=Load()), op=Add(), right=Constant(value='\ntraceback:\n')), op=Add(), right=Name(id='traceback_str', ctx=Load()))], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte

[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte
Visiting call: to_byte (full: parl.utils.to_byte) at line 318
  Args: BinOp(left=BinOp(left=Name(id='error_str', ctx=Load()), op=Add(), right=Constant(value='\ntraceback:\n')), op=Add(), right=Name(id='traceback_str', ctx=Load()))

[Sink Check] Checking function: to_byte (full name: parl.utils.to_byte)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
[Sink check result] to_byte: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 320
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='NORMAL_TAG', ctx=Load()), Call(func=Name(id='dumps_return', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return

[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return
Visiting call: dumps_return (full: parl.remote.communication.dumps_return) at line 320
  Args: Call(func=Name(id='set', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[])

[Sink Check] Checking function: dumps_return (full name: parl.remote.communication.dumps_return)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
[Sink check result] dumps_return: Not a sink


[Function Name Parsing] Starting parsing: Name(id='set', ctx=Load())
  Using simple name: set

[Function Name Parsing] Starting parsing: Name(id='set', ctx=Load())
  Using simple name: set
Visiting call: set (full: set) at line 320
  Args: Call(func=Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])

[Sink Check] Checking function: set (full name: set)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='set', full name='set'
    × No match for this pattern
[Sink check result] set: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load())
  Constructed full name: obj.__dict__
  Handling nested attributes: obj.__dict__.keys

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load())
  Constructed full name: obj.__dict__
  Handling nested attributes: obj.__dict__.keys
Visiting call: keys (full: obj.__dict__.keys) at line 320

[Sink Check] Checking function: keys (full name: obj.__dict__.keys)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
[Sink check result] keys: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error
Visiting call: error (full: logger.error) at line 322
  Args: Call(func=Attribute(value=Constant(value='Message from job {}'), attr='format', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])

[Sink Check] Checking function: error (full name: logger.error)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
[Sink check result] error: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='Message from job {}'), attr='format', ctx=Load())
  Complex expression: 'Message from job {}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='Message from job {}'), attr='format', ctx=Load())
  Complex expression: 'Message from job {}'.format
Visiting call: 'Message from job {}'.format (full: None) at line 322
  Args: Name(id='message', ctx=Load())

[Sink Check] Checking function: 'Message from job {}'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''Message from job {}'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''Message from job {}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''Message from job {}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''Message from job {}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''Message from job {}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''Message from job {}'.format', full name='None'
    × No match for this pattern
[Sink check result] 'Message from job {}'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 323
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='EXCEPTION_TAG', ctx=Load()), Constant(value=b'[job]Unkonwn tag when tried to receive the class definition')], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='zmq', ctx=Load()), attr='Context', ctx=Load())
  Constructed full name: zmq.Context

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='zmq', ctx=Load()), attr='Context', ctx=Load())
  Constructed full name: zmq.Context
Checking assignment with function call: Context (full: zmq.Context) at line 335

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='zmq', ctx=Load()), attr='Context', ctx=Load())
  Constructed full name: zmq.Context

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='zmq', ctx=Load()), attr='Context', ctx=Load())
  Constructed full name: zmq.Context
Visiting call: Context (full: zmq.Context) at line 335

[Sink Check] Checking function: Context (full name: zmq.Context)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='Context', full name='zmq.Context'
    × No match for this pattern
[Sink check result] Context: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='ctx', ctx=Load()), attr='socket', ctx=Load())
  Constructed full name: ctx.socket

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='ctx', ctx=Load()), attr='socket', ctx=Load())
  Constructed full name: ctx.socket
Checking assignment with function call: socket (full: ctx.socket) at line 338

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='ctx', ctx=Load()), attr='socket', ctx=Load())
  Constructed full name: ctx.socket

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='ctx', ctx=Load()), attr='socket', ctx=Load())
  Constructed full name: ctx.socket
Visiting call: socket (full: ctx.socket) at line 338
  Args: Attribute(value=Name(id='zmq', ctx=Load()), attr='REP', ctx=Load())

[Sink Check] Checking function: socket (full name: ctx.socket)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='socket', full name='ctx.socket'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='socket', full name='ctx.socket'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='socket', full name='ctx.socket'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='socket', full name='ctx.socket'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='socket', full name='ctx.socket'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='socket', full name='ctx.socket'
    × No match for this pattern
[Sink check result] socket: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='bind_to_random_port', ctx=Load())
  Constructed full name: reply_socket.bind_to_random_port

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='bind_to_random_port', ctx=Load())
  Constructed full name: reply_socket.bind_to_random_port
Checking assignment with function call: bind_to_random_port (full: reply_socket.bind_to_random_port) at line 339

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='bind_to_random_port', ctx=Load())
  Constructed full name: reply_socket.bind_to_random_port

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='bind_to_random_port', ctx=Load())
  Constructed full name: reply_socket.bind_to_random_port
Visiting call: bind_to_random_port (full: reply_socket.bind_to_random_port) at line 339
  Keywords: addr=Constant(value='tcp://*')

[Sink Check] Checking function: bind_to_random_port (full name: reply_socket.bind_to_random_port)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='bind_to_random_port', full name='reply_socket.bind_to_random_port'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='bind_to_random_port', full name='reply_socket.bind_to_random_port'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='bind_to_random_port', full name='reply_socket.bind_to_random_port'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='bind_to_random_port', full name='reply_socket.bind_to_random_port'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='bind_to_random_port', full name='reply_socket.bind_to_random_port'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='bind_to_random_port', full name='reply_socket.bind_to_random_port'
    × No match for this pattern
[Sink check result] bind_to_random_port: Not a sink


[Function Name Parsing] Starting parsing: Name(id='get_ip_address', ctx=Load())
  Found mapping in from_imports: get_ip_address -> parl.utils.get_ip_address

[Function Name Parsing] Starting parsing: Name(id='get_ip_address', ctx=Load())
  Found mapping in from_imports: get_ip_address -> parl.utils.get_ip_address
Checking assignment with function call: get_ip_address (full: parl.utils.get_ip_address) at line 341

[Function Name Parsing] Starting parsing: Name(id='get_ip_address', ctx=Load())
  Found mapping in from_imports: get_ip_address -> parl.utils.get_ip_address

[Function Name Parsing] Starting parsing: Name(id='get_ip_address', ctx=Load())
  Found mapping in from_imports: get_ip_address -> parl.utils.get_ip_address
Visiting call: get_ip_address (full: parl.utils.get_ip_address) at line 341

[Sink Check] Checking function: get_ip_address (full name: parl.utils.get_ip_address)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='get_ip_address', full name='parl.utils.get_ip_address'
    × No match for this pattern
[Sink check result] get_ip_address: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='{}:{}'), attr='format', ctx=Load())
  Complex expression: '{}:{}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='{}:{}'), attr='format', ctx=Load())
  Complex expression: '{}:{}'.format
Checking assignment with function call: '{}:{}'.format (full: None) at line 342

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='{}:{}'), attr='format', ctx=Load())
  Complex expression: '{}:{}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='{}:{}'), attr='format', ctx=Load())
  Complex expression: '{}:{}'.format
Visiting call: '{}:{}'.format (full: None) at line 342
  Args: Name(id='job_ip', ctx=Load()), Name(id='job_port', ctx=Load())

[Sink Check] Checking function: '{}:{}'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''{}:{}'.format', full name='None'
    × No match for this pattern
[Sink check result] '{}:{}'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='job_address', ctx=Load()), attr='replace', ctx=Load())
  Constructed full name: job_address.replace

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='job_address', ctx=Load()), attr='replace', ctx=Load())
  Constructed full name: job_address.replace
Visiting call: replace (full: job_address.replace) at line 344
  Args: Constant(value=':'), Constant(value='_')

[Sink Check] Checking function: replace (full name: job_address.replace)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='replace', full name='job_address.replace'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='replace', full name='job_address.replace'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='replace', full name='job_address.replace'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='replace', full name='job_address.replace'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='replace', full name='job_address.replace'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='replace', full name='job_address.replace'
    × No match for this pattern
[Sink check result] replace: Not a sink


[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str
Visiting call: str (full: str) at line 344
  Args: Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])], keywords=[])

[Sink Check] Checking function: str (full name: str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
[Sink check result] str: Not a sink


[Function Name Parsing] Starting parsing: Name(id='int', ctx=Load())
  Using simple name: int

[Function Name Parsing] Starting parsing: Name(id='int', ctx=Load())
  Using simple name: int
Visiting call: int (full: int) at line 344
  Args: Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])

[Sink Check] Checking function: int (full name: int)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='int', full name='int'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='int', full name='int'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='int', full name='int'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='int', full name='int'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='int', full name='int'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='int', full name='int'
    × No match for this pattern
[Sink check result] int: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load())
  Constructed full name: time.time

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load())
  Constructed full name: time.time
Visiting call: time (full: time.time) at line 344

[Sink Check] Checking function: time (full name: time.time)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='time', full name='time.time'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='time', full name='time.time'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='time', full name='time.time'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='time', full name='time.time'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='time', full name='time.time'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='time', full name='time.time'
    × No match for this pattern
[Sink check result] time: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='expanduser', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.expanduser
Checking assignment with function call: expanduser (full: os.path.expanduser) at line 345

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='expanduser', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.expanduser

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='expanduser', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.expanduser
Visiting call: expanduser (full: os.path.expanduser) at line 345
  Args: Call(func=Attribute(value=Constant(value='~/.parl_data/job/{}'), attr='format', ctx=Load()), args=[Name(id='job_id', ctx=Load())], keywords=[])

[Sink Check] Checking function: expanduser (full name: os.path.expanduser)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='expanduser', full name='os.path.expanduser'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='expanduser', full name='os.path.expanduser'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='expanduser', full name='os.path.expanduser'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='expanduser', full name='os.path.expanduser'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='expanduser', full name='os.path.expanduser'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='expanduser', full name='os.path.expanduser'
    × No match for this pattern
[Sink check result] expanduser: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='~/.parl_data/job/{}'), attr='format', ctx=Load())
  Complex expression: '~/.parl_data/job/{}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='~/.parl_data/job/{}'), attr='format', ctx=Load())
  Complex expression: '~/.parl_data/job/{}'.format
Visiting call: '~/.parl_data/job/{}'.format (full: None) at line 345
  Args: Name(id='job_id', ctx=Load())

[Sink Check] Checking function: '~/.parl_data/job/{}'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''~/.parl_data/job/{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''~/.parl_data/job/{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''~/.parl_data/job/{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''~/.parl_data/job/{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''~/.parl_data/job/{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''~/.parl_data/job/{}'.format', full name='None'
    × No match for this pattern
[Sink check result] '~/.parl_data/job/{}'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='set_dir', ctx=Load())
  Constructed full name: logger.set_dir

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='set_dir', ctx=Load())
  Constructed full name: logger.set_dir
Visiting call: set_dir (full: logger.set_dir) at line 346
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='log_dir', ctx=Load())

[Sink Check] Checking function: set_dir (full name: logger.set_dir)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='set_dir', full name='logger.set_dir'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='set_dir', full name='logger.set_dir'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='set_dir', full name='logger.set_dir'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='set_dir', full name='logger.set_dir'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='set_dir', full name='logger.set_dir'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='set_dir', full name='logger.set_dir'
    × No match for this pattern
[Sink check result] set_dir: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Checking assignment with function call: join (full: os.path.join) at line 347

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: os.path
  Handling nested attributes: os.path.join
Visiting call: join (full: os.path.join) at line 347
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='log_dir', ctx=Load()), Constant(value='stdout.log')

[Sink Check] Checking function: join (full name: os.path.join)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='join', full name='os.path.join'
    × No match for this pattern
[Sink check result] join: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load())
  Constructed full name: logger.info

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load())
  Constructed full name: logger.info
Visiting call: info (full: logger.info) at line 349
  Args: Call(func=Attribute(value=Constant(value='[Job] Job {} initialized. Reply heartbeat socket Address: {}.'), attr='format', ctx=Load()), args=[Name(id='job_id', ctx=Load()), Name(id='job_address', ctx=Load())], keywords=[])

[Sink Check] Checking function: info (full name: logger.info)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='info', full name='logger.info'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='info', full name='logger.info'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='info', full name='logger.info'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='info', full name='logger.info'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='info', full name='logger.info'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='info', full name='logger.info'
    × No match for this pattern
[Sink check result] info: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='[Job] Job {} initialized. Reply heartbeat socket Address: {}.'), attr='format', ctx=Load())
  Complex expression: '[Job] Job {} initialized. Reply heartbeat socket Address: {}.'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='[Job] Job {} initialized. Reply heartbeat socket Address: {}.'), attr='format', ctx=Load())
  Complex expression: '[Job] Job {} initialized. Reply heartbeat socket Address: {}.'.format
Visiting call: '[Job] Job {} initialized. Reply heartbeat socket Address: {}.'.format (full: None) at line 349
  Args: Name(id='job_id', ctx=Load()), Name(id='job_address', ctx=Load())

[Sink Check] Checking function: '[Job] Job {} initialized. Reply heartbeat socket Address: {}.'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''[Job] Job {} initialized. Reply heartbeat socket Address: {}.'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''[Job] Job {} initialized. Reply heartbeat socket Address: {}.'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''[Job] Job {} initialized. Reply heartbeat socket Address: {}.'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''[Job] Job {} initialized. Reply heartbeat socket Address: {}.'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''[Job] Job {} initialized. Reply heartbeat socket Address: {}.'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''[Job] Job {} initialized. Reply heartbeat socket Address: {}.'.format', full name='None'
    × No match for this pattern
[Sink check result] '[Job] Job {} initialized. Reply heartbeat socket Address: {}.'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='job_address_sender', ctx=Load()), attr='send', ctx=Load())
  Constructed full name: job_address_sender.send

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='job_address_sender', ctx=Load()), attr='send', ctx=Load())
  Constructed full name: job_address_sender.send
Visiting call: send (full: job_address_sender.send) at line 351
  Args: Name(id='job_address', ctx=Load())

[Sink Check] Checking function: send (full name: job_address_sender.send)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send', full name='job_address_sender.send'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send', full name='job_address_sender.send'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send', full name='job_address_sender.send'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send', full name='job_address_sender.send'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send', full name='job_address_sender.send'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send', full name='job_address_sender.send'
    × No match for this pattern
[Sink check result] send: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='job_id_sender', ctx=Load()), attr='send', ctx=Load())
  Constructed full name: job_id_sender.send

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='job_id_sender', ctx=Load()), attr='send', ctx=Load())
  Constructed full name: job_id_sender.send
Visiting call: send (full: job_id_sender.send) at line 352
  Args: Name(id='job_id', ctx=Load())

[Sink Check] Checking function: send (full name: job_id_sender.send)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send', full name='job_id_sender.send'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send', full name='job_id_sender.send'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send', full name='job_id_sender.send'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send', full name='job_id_sender.send'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send', full name='job_id_sender.send'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send', full name='job_id_sender.send'
    × No match for this pattern
[Sink check result] send: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='wait_for_files', ctx=Load())
  Constructed full name: self.wait_for_files

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='wait_for_files', ctx=Load())
  Constructed full name: self.wait_for_files
Checking assignment with function call: wait_for_files (full: self.wait_for_files) at line 355

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='wait_for_files', ctx=Load())
  Constructed full name: self.wait_for_files

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='wait_for_files', ctx=Load())
  Constructed full name: self.wait_for_files
Visiting call: wait_for_files (full: self.wait_for_files) at line 355
  Args: Name(id='reply_socket', ctx=Load()), Name(id='job_address', ctx=Load())

[Sink Check] Checking function: wait_for_files (full name: self.wait_for_files)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='wait_for_files', full name='self.wait_for_files'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='wait_for_files', full name='self.wait_for_files'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='wait_for_files', full name='self.wait_for_files'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='wait_for_files', full name='self.wait_for_files'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='wait_for_files', full name='self.wait_for_files'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='wait_for_files', full name='self.wait_for_files'
    × No match for this pattern
[Sink check result] wait_for_files: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()), attr='insert', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: sys.path
  Handling nested attributes: sys.path.insert

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()), attr='insert', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load())
  Constructed full name: sys.path
  Handling nested attributes: sys.path.insert
Visiting call: insert (full: sys.path.insert) at line 356
  Args: Constant(value=0), Name(id='envdir', ctx=Load())

[Sink Check] Checking function: insert (full name: sys.path.insert)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='insert', full name='sys.path.insert'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='insert', full name='sys.path.insert'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='insert', full name='sys.path.insert'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='insert', full name='sys.path.insert'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='insert', full name='sys.path.insert'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='insert', full name='sys.path.insert'
    × No match for this pattern
[Sink check result] insert: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='chdir', ctx=Load())
  Constructed full name: os.chdir

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='os', ctx=Load()), attr='chdir', ctx=Load())
  Constructed full name: os.chdir
Visiting call: chdir (full: os.chdir) at line 357
  Args: Name(id='envdir', ctx=Load())

[Sink Check] Checking function: chdir (full name: os.chdir)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='chdir', full name='os.chdir'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='chdir', full name='os.chdir'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='chdir', full name='os.chdir'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='chdir', full name='os.chdir'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='chdir', full name='os.chdir'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='chdir', full name='os.chdir'
    × No match for this pattern
[Sink check result] chdir: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='wait_for_connection', ctx=Load())
  Constructed full name: self.wait_for_connection

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='wait_for_connection', ctx=Load())
  Constructed full name: self.wait_for_connection
Checking assignment with function call: wait_for_connection (full: self.wait_for_connection) at line 360

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='wait_for_connection', ctx=Load())
  Constructed full name: self.wait_for_connection

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='wait_for_connection', ctx=Load())
  Constructed full name: self.wait_for_connection
Visiting call: wait_for_connection (full: self.wait_for_connection) at line 360
  Args: Name(id='reply_socket', ctx=Load())

[Sink Check] Checking function: wait_for_connection (full name: self.wait_for_connection)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='wait_for_connection', full name='self.wait_for_connection'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='wait_for_connection', full name='self.wait_for_connection'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='wait_for_connection', full name='self.wait_for_connection'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='wait_for_connection', full name='self.wait_for_connection'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='wait_for_connection', full name='self.wait_for_connection'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='wait_for_connection', full name='self.wait_for_connection'
    × No match for this pattern
[Sink check result] wait_for_connection: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='single_task', ctx=Load())
  Constructed full name: self.single_task

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='self', ctx=Load()), attr='single_task', ctx=Load())
  Constructed full name: self.single_task
Visiting call: single_task (full: self.single_task) at line 363
  Args: Name(id='obj', ctx=Load()), Name(id='reply_socket', ctx=Load()), Name(id='job_address', ctx=Load())

[Sink Check] Checking function: single_task (full name: self.single_task)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='single_task', full name='self.single_task'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='single_task', full name='self.single_task'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='single_task', full name='self.single_task'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='single_task', full name='self.single_task'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='single_task', full name='self.single_task'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='single_task', full name='self.single_task'
    × No match for this pattern
[Sink check result] single_task: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error
Visiting call: error (full: logger.error) at line 365
  Args: Call(func=Attribute(value=Constant(value='Error occurs when running a single task. We will reset this job. \nReason:{}'), attr='format', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[])

[Sink Check] Checking function: error (full name: logger.error)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
[Sink check result] error: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='Error occurs when running a single task. We will reset this job. \nReason:{}'), attr='format', ctx=Load())
  Complex expression: 'Error occurs when running a single task. We will reset this job. \nReason:{}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='Error occurs when running a single task. We will reset this job. \nReason:{}'), attr='format', ctx=Load())
  Complex expression: 'Error occurs when running a single task. We will reset this job. \nReason:{}'.format
Visiting call: 'Error occurs when running a single task. We will reset this job. \nReason:{}'.format (full: None) at line 365
  Args: Name(id='e', ctx=Load())

[Sink Check] Checking function: 'Error occurs when running a single task. We will reset this job. \nReason:{}'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''Error occurs when running a single task. We will reset this job. \nReason:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''Error occurs when running a single task. We will reset this job. \nReason:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''Error occurs when running a single task. We will reset this job. \nReason:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''Error occurs when running a single task. We will reset this job. \nReason:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''Error occurs when running a single task. We will reset this job. \nReason:{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''Error occurs when running a single task. We will reset this job. \nReason:{}'.format', full name='None'
    × No match for this pattern
[Sink check result] 'Error occurs when running a single task. We will reset this job. \nReason:{}'.format: Not a sink


[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str
Checking assignment with function call: str (full: str) at line 366

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str
Visiting call: str (full: str) at line 366
  Args: Call(func=Attribute(value=Name(id='traceback', ctx=Load()), attr='format_exc', ctx=Load()), args=[], keywords=[])

[Sink Check] Checking function: str (full name: str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
[Sink check result] str: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='traceback', ctx=Load()), attr='format_exc', ctx=Load())
  Constructed full name: traceback.format_exc

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='traceback', ctx=Load()), attr='format_exc', ctx=Load())
  Constructed full name: traceback.format_exc
Visiting call: format_exc (full: traceback.format_exc) at line 366

[Sink Check] Checking function: format_exc (full name: traceback.format_exc)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
[Sink check result] format_exc: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error
Visiting call: error (full: logger.error) at line 367
  Args: Call(func=Attribute(value=Constant(value='traceback:\n{}'), attr='format', ctx=Load()), args=[Name(id='traceback_str', ctx=Load())], keywords=[])

[Sink Check] Checking function: error (full name: logger.error)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
[Sink check result] error: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='traceback:\n{}'), attr='format', ctx=Load())
  Complex expression: 'traceback:\n{}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='traceback:\n{}'), attr='format', ctx=Load())
  Complex expression: 'traceback:\n{}'.format
Visiting call: 'traceback:\n{}'.format (full: None) at line 367
  Args: Name(id='traceback_str', ctx=Load())

[Sink Check] Checking function: 'traceback:\n{}'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
[Sink check result] 'traceback:\n{}'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='shutil', ctx=Load()), attr='rmtree', ctx=Load())
  Constructed full name: shutil.rmtree

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='shutil', ctx=Load()), attr='rmtree', ctx=Load())
  Constructed full name: shutil.rmtree
Visiting call: rmtree (full: shutil.rmtree) at line 368
  Args: Name(id='envdir', ctx=Load())

[Sink Check] Checking function: rmtree (full name: shutil.rmtree)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='rmtree', full name='shutil.rmtree'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='rmtree', full name='shutil.rmtree'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='rmtree', full name='shutil.rmtree'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='rmtree', full name='shutil.rmtree'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='rmtree', full name='shutil.rmtree'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='rmtree', full name='shutil.rmtree'
    × No match for this pattern
[Sink check result] rmtree: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Found source assignment: message = recv_multipart at line 387

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Checking assignment with function call: recv_multipart (full: reply_socket.recv_multipart) at line 387
Found source in assignment: NetworkInput at line 387
Tainted variable 'message' from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Detected potential recv function: recv_multipart at line 387
  Return value assigned to: message
  Marked message as tainted from source NetworkInput

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='recv_multipart', ctx=Load())
  Constructed full name: reply_socket.recv_multipart
Visiting call: recv_multipart (full: reply_socket.recv_multipart) at line 387
Found source: NetworkInput at line 387

[Sink Check] Checking function: recv_multipart (full name: reply_socket.recv_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='recv_multipart', full name='reply_socket.recv_multipart'
    × No match for this pattern
[Sink check result] recv_multipart: Not a sink

Propagated taint from message[...] to tag at line 388

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Checking assignment with function call: to_str (full: parl.utils.to_str) at line 396

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Visiting call: to_str (full: parl.utils.to_str) at line 396
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=1), ctx=Load())

[Sink Check] Checking function: to_str (full name: parl.utils.to_str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
[Sink check result] to_str: Not a sink

Propagated taint from message[...] to data at line 397

[Function Name Parsing] Starting parsing: Name(id='loads_argument', ctx=Load())
  Found mapping in from_imports: loads_argument -> parl.remote.communication.loads_argument
Checking assignment with function call: loads_argument (full: parl.remote.communication.loads_argument) at line 398

[Function Name Parsing] Starting parsing: Name(id='loads_argument', ctx=Load())
  Found mapping in from_imports: loads_argument -> parl.remote.communication.loads_argument

[Function Name Parsing] Starting parsing: Name(id='loads_argument', ctx=Load())
  Found mapping in from_imports: loads_argument -> parl.remote.communication.loads_argument
Visiting call: loads_argument (full: parl.remote.communication.loads_argument) at line 398
  Args: Name(id='data', ctx=Load())

[Sink Check] Checking function: loads_argument (full name: parl.remote.communication.loads_argument)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='loads_argument', full name='parl.remote.communication.loads_argument'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='loads_argument', full name='parl.remote.communication.loads_argument'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='loads_argument', full name='parl.remote.communication.loads_argument'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='loads_argument', full name='parl.remote.communication.loads_argument'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='loads_argument', full name='parl.remote.communication.loads_argument'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='loads_argument', full name='parl.remote.communication.loads_argument'
    × No match for this pattern
[Sink check result] loads_argument: Not a sink


[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file

[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file

[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file
Visiting call: redirect_output_to_file (full: parl.remote.utils.redirect_output_to_file) at line 401
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='logfile_path', ctx=Load()), Attribute(value=Name(id='os', ctx=Load()), attr='devnull', ctx=Load())

[Sink Check] Checking function: redirect_output_to_file (full name: parl.remote.utils.redirect_output_to_file)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
[Sink check result] redirect_output_to_file: Not a sink


[Function Name Parsing] Starting parsing: Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='obj', ctx=Load()), Name(id='function_name', ctx=Load())], keywords=[])
  Complex expression: getattr(obj, function_name)

[Function Name Parsing] Starting parsing: Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='obj', ctx=Load()), Name(id='function_name', ctx=Load())], keywords=[])
  Complex expression: getattr(obj, function_name)
Checking assignment with function call: getattr(obj, function_name) (full: None) at line 402

[Function Name Parsing] Starting parsing: Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='obj', ctx=Load()), Name(id='function_name', ctx=Load())], keywords=[])
  Complex expression: getattr(obj, function_name)

[Function Name Parsing] Starting parsing: Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='obj', ctx=Load()), Name(id='function_name', ctx=Load())], keywords=[])
  Complex expression: getattr(obj, function_name)
Visiting call: getattr(obj, function_name) (full: None) at line 402
  Args: Starred(value=Name(id='args', ctx=Load()), ctx=Load())
  Keywords: None=Name(id='kwargs', ctx=Load())

[Sink Check] Checking function: getattr(obj, function_name) (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='getattr(obj, function_name)', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='getattr(obj, function_name)', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='getattr(obj, function_name)', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='getattr(obj, function_name)', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='getattr(obj, function_name)', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='getattr(obj, function_name)', full name='None'
    × No match for this pattern
[Sink check result] getattr(obj, function_name): Not a sink


[Function Name Parsing] Starting parsing: Name(id='getattr', ctx=Load())
  Using simple name: getattr

[Function Name Parsing] Starting parsing: Name(id='getattr', ctx=Load())
  Using simple name: getattr
Visiting call: getattr (full: getattr) at line 402
  Args: Name(id='obj', ctx=Load()), Name(id='function_name', ctx=Load())

[Sink Check] Checking function: getattr (full name: getattr)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
[Sink check result] getattr: Not a sink


[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return

[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return
Checking assignment with function call: dumps_return (full: parl.remote.communication.dumps_return) at line 404

[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return

[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return
Visiting call: dumps_return (full: parl.remote.communication.dumps_return) at line 404
  Args: Name(id='ret', ctx=Load())

[Sink Check] Checking function: dumps_return (full name: parl.remote.communication.dumps_return)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
[Sink check result] dumps_return: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 405
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='NORMAL_TAG', ctx=Load()), Name(id='ret', ctx=Load()), Call(func=Name(id='dumps_return', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return

[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return
Visiting call: dumps_return (full: parl.remote.communication.dumps_return) at line 407
  Args: Call(func=Name(id='set', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[])

[Sink Check] Checking function: dumps_return (full name: parl.remote.communication.dumps_return)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
[Sink check result] dumps_return: Not a sink


[Function Name Parsing] Starting parsing: Name(id='set', ctx=Load())
  Using simple name: set

[Function Name Parsing] Starting parsing: Name(id='set', ctx=Load())
  Using simple name: set
Visiting call: set (full: set) at line 407
  Args: Call(func=Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])

[Sink Check] Checking function: set (full name: set)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='set', full name='set'
    × No match for this pattern
[Sink check result] set: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load())
  Constructed full name: obj.__dict__
  Handling nested attributes: obj.__dict__.keys

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load())
  Constructed full name: obj.__dict__
  Handling nested attributes: obj.__dict__.keys
Visiting call: keys (full: obj.__dict__.keys) at line 407

[Sink Check] Checking function: keys (full name: obj.__dict__.keys)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
[Sink check result] keys: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Checking assignment with function call: to_str (full: parl.utils.to_str) at line 410

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Visiting call: to_str (full: parl.utils.to_str) at line 410
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=1), ctx=Load())

[Sink Check] Checking function: to_str (full name: parl.utils.to_str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
[Sink check result] to_str: Not a sink


[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file

[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file

[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file
Visiting call: redirect_output_to_file (full: parl.remote.utils.redirect_output_to_file) at line 411
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='logfile_path', ctx=Load()), Attribute(value=Name(id='os', ctx=Load()), attr='devnull', ctx=Load())

[Sink Check] Checking function: redirect_output_to_file (full name: parl.remote.utils.redirect_output_to_file)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
[Sink check result] redirect_output_to_file: Not a sink


[Function Name Parsing] Starting parsing: Name(id='getattr', ctx=Load())
  Using simple name: getattr

[Function Name Parsing] Starting parsing: Name(id='getattr', ctx=Load())
  Using simple name: getattr
Checking assignment with function call: getattr (full: getattr) at line 412

[Function Name Parsing] Starting parsing: Name(id='getattr', ctx=Load())
  Using simple name: getattr

[Function Name Parsing] Starting parsing: Name(id='getattr', ctx=Load())
  Using simple name: getattr
Visiting call: getattr (full: getattr) at line 412
  Args: Name(id='obj', ctx=Load()), Name(id='attribute_name', ctx=Load())

[Sink Check] Checking function: getattr (full name: getattr)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='getattr', full name='getattr'
    × No match for this pattern
[Sink check result] getattr: Not a sink


[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return

[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return
Checking assignment with function call: dumps_return (full: parl.remote.communication.dumps_return) at line 413

[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return

[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return
Visiting call: dumps_return (full: parl.remote.communication.dumps_return) at line 413
  Args: Name(id='ret', ctx=Load())

[Sink Check] Checking function: dumps_return (full name: parl.remote.communication.dumps_return)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
[Sink check result] dumps_return: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 414
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='NORMAL_TAG', ctx=Load()), Name(id='ret', ctx=Load())], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Checking assignment with function call: to_str (full: parl.utils.to_str) at line 416

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str

[Function Name Parsing] Starting parsing: Name(id='to_str', ctx=Load())
  Found mapping in from_imports: to_str -> parl.utils.to_str
Visiting call: to_str (full: parl.utils.to_str) at line 416
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=1), ctx=Load())

[Sink Check] Checking function: to_str (full name: parl.utils.to_str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_str', full name='parl.utils.to_str'
    × No match for this pattern
[Sink check result] to_str: Not a sink


[Function Name Parsing] Starting parsing: Name(id='loads_return', ctx=Load())
  Found mapping in from_imports: loads_return -> parl.remote.communication.loads_return

[Function Name Parsing] Starting parsing: Name(id='loads_return', ctx=Load())
  Found mapping in from_imports: loads_return -> parl.remote.communication.loads_return
Checking assignment with function call: loads_return (full: parl.remote.communication.loads_return) at line 417

[Function Name Parsing] Starting parsing: Name(id='loads_return', ctx=Load())
  Found mapping in from_imports: loads_return -> parl.remote.communication.loads_return

[Function Name Parsing] Starting parsing: Name(id='loads_return', ctx=Load())
  Found mapping in from_imports: loads_return -> parl.remote.communication.loads_return
Visiting call: loads_return (full: parl.remote.communication.loads_return) at line 417
  Args: Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value=2), ctx=Load())

[Sink Check] Checking function: loads_return (full name: parl.remote.communication.loads_return)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='loads_return', full name='parl.remote.communication.loads_return'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='loads_return', full name='parl.remote.communication.loads_return'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='loads_return', full name='parl.remote.communication.loads_return'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='loads_return', full name='parl.remote.communication.loads_return'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='loads_return', full name='parl.remote.communication.loads_return'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='loads_return', full name='parl.remote.communication.loads_return'
    × No match for this pattern
[Sink check result] loads_return: Not a sink


[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file

[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file

[Function Name Parsing] Starting parsing: Name(id='redirect_output_to_file', ctx=Load())
  Found mapping in from_imports: redirect_output_to_file -> parl.remote.utils.redirect_output_to_file
Visiting call: redirect_output_to_file (full: parl.remote.utils.redirect_output_to_file) at line 418
  Args: Attribute(value=Name(id='self', ctx=Load()), attr='logfile_path', ctx=Load()), Attribute(value=Name(id='os', ctx=Load()), attr='devnull', ctx=Load())

[Sink Check] Checking function: redirect_output_to_file (full name: parl.remote.utils.redirect_output_to_file)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='redirect_output_to_file', full name='parl.remote.utils.redirect_output_to_file'
    × No match for this pattern
[Sink check result] redirect_output_to_file: Not a sink


[Function Name Parsing] Starting parsing: Name(id='setattr', ctx=Load())
  Using simple name: setattr

[Function Name Parsing] Starting parsing: Name(id='setattr', ctx=Load())
  Using simple name: setattr
Visiting call: setattr (full: setattr) at line 419
  Args: Name(id='obj', ctx=Load()), Name(id='attribute_name', ctx=Load()), Name(id='attribute_value', ctx=Load())

[Sink Check] Checking function: setattr (full name: setattr)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='setattr', full name='setattr'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='setattr', full name='setattr'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='setattr', full name='setattr'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='setattr', full name='setattr'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='setattr', full name='setattr'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='setattr', full name='setattr'
    × No match for this pattern
[Sink check result] setattr: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 420
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='NORMAL_TAG', ctx=Load()), Call(func=Name(id='dumps_return', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return

[Function Name Parsing] Starting parsing: Name(id='dumps_return', ctx=Load())
  Found mapping in from_imports: dumps_return -> parl.remote.communication.dumps_return
Visiting call: dumps_return (full: parl.remote.communication.dumps_return) at line 422
  Args: Call(func=Name(id='set', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[])

[Sink Check] Checking function: dumps_return (full name: parl.remote.communication.dumps_return)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='dumps_return', full name='parl.remote.communication.dumps_return'
    × No match for this pattern
[Sink check result] dumps_return: Not a sink


[Function Name Parsing] Starting parsing: Name(id='set', ctx=Load())
  Using simple name: set

[Function Name Parsing] Starting parsing: Name(id='set', ctx=Load())
  Using simple name: set
Visiting call: set (full: set) at line 422
  Args: Call(func=Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])

[Sink Check] Checking function: set (full name: set)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='set', full name='set'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='set', full name='set'
    × No match for this pattern
[Sink check result] set: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load())
  Constructed full name: obj.__dict__
  Handling nested attributes: obj.__dict__.keys

[Function Name Parsing] Starting parsing: Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load()), attr='keys', ctx=Load())

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Load())
  Constructed full name: obj.__dict__
  Handling nested attributes: obj.__dict__.keys
Visiting call: keys (full: obj.__dict__.keys) at line 422

[Sink Check] Checking function: keys (full name: obj.__dict__.keys)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='keys', full name='obj.__dict__.keys'
    × No match for this pattern
[Sink check result] keys: Not a sink


[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str
Checking assignment with function call: str (full: str) at line 429

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str
Visiting call: str (full: str) at line 429
  Args: Name(id='e', ctx=Load())

[Sink Check] Checking function: str (full name: str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
[Sink check result] str: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error
Visiting call: error (full: logger.error) at line 430
  Args: Name(id='error_str', ctx=Load())

[Sink Check] Checking function: error (full name: logger.error)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
[Sink check result] error: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 433
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='ATTRIBUTE_EXCEPTION_TAG', ctx=Load()), Call(func=Name(id='to_byte', ctx=Load()), args=[Name(id='error_str', ctx=Load())], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte

[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte
Visiting call: to_byte (full: parl.utils.to_byte) at line 433
  Args: Name(id='error_str', ctx=Load())

[Sink Check] Checking function: to_byte (full name: parl.utils.to_byte)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
[Sink check result] to_byte: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 437
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='SERIALIZE_EXCEPTION_TAG', ctx=Load()), Call(func=Name(id='to_byte', ctx=Load()), args=[Name(id='error_str', ctx=Load())], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte

[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte
Visiting call: to_byte (full: parl.utils.to_byte) at line 437
  Args: Name(id='error_str', ctx=Load())

[Sink Check] Checking function: to_byte (full name: parl.utils.to_byte)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
[Sink check result] to_byte: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 441
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='DESERIALIZE_EXCEPTION_TAG', ctx=Load()), Call(func=Name(id='to_byte', ctx=Load()), args=[Name(id='error_str', ctx=Load())], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte

[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte
Visiting call: to_byte (full: parl.utils.to_byte) at line 441
  Args: Name(id='error_str', ctx=Load())

[Sink Check] Checking function: to_byte (full name: parl.utils.to_byte)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
[Sink check result] to_byte: Not a sink


[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str
Checking assignment with function call: str (full: str) at line 445

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str

[Function Name Parsing] Starting parsing: Name(id='str', ctx=Load())
  Using simple name: str
Visiting call: str (full: str) at line 445
  Args: Call(func=Attribute(value=Name(id='traceback', ctx=Load()), attr='format_exc', ctx=Load()), args=[], keywords=[])

[Sink Check] Checking function: str (full name: str)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='str', full name='str'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='str', full name='str'
    × No match for this pattern
[Sink check result] str: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='traceback', ctx=Load()), attr='format_exc', ctx=Load())
  Constructed full name: traceback.format_exc

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='traceback', ctx=Load()), attr='format_exc', ctx=Load())
  Constructed full name: traceback.format_exc
Visiting call: format_exc (full: traceback.format_exc) at line 445

[Sink Check] Checking function: format_exc (full name: traceback.format_exc)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='format_exc', full name='traceback.format_exc'
    × No match for this pattern
[Sink check result] format_exc: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error
Visiting call: error (full: logger.error) at line 446
  Args: Call(func=Attribute(value=Constant(value='traceback:\n{}'), attr='format', ctx=Load()), args=[Name(id='traceback_str', ctx=Load())], keywords=[])

[Sink Check] Checking function: error (full name: logger.error)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
[Sink check result] error: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='traceback:\n{}'), attr='format', ctx=Load())
  Complex expression: 'traceback:\n{}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='traceback:\n{}'), attr='format', ctx=Load())
  Complex expression: 'traceback:\n{}'.format
Visiting call: 'traceback:\n{}'.format (full: None) at line 446
  Args: Name(id='traceback_str', ctx=Load())

[Sink Check] Checking function: 'traceback:\n{}'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''traceback:\n{}'.format', full name='None'
    × No match for this pattern
[Sink check result] 'traceback:\n{}'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 447
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='EXCEPTION_TAG', ctx=Load()), Call(func=Name(id='to_byte', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='error_str', ctx=Load()), op=Add(), right=Constant(value='\ntraceback:\n')), op=Add(), right=Name(id='traceback_str', ctx=Load()))], keywords=[])], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte

[Function Name Parsing] Starting parsing: Name(id='to_byte', ctx=Load())
  Found mapping in from_imports: to_byte -> parl.utils.to_byte
Visiting call: to_byte (full: parl.utils.to_byte) at line 449
  Args: BinOp(left=BinOp(left=Name(id='error_str', ctx=Load()), op=Add(), right=Constant(value='\ntraceback:\n')), op=Add(), right=Name(id='traceback_str', ctx=Load()))

[Sink Check] Checking function: to_byte (full name: parl.utils.to_byte)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='to_byte', full name='parl.utils.to_byte'
    × No match for this pattern
[Sink check result] to_byte: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='reply_socket', ctx=Load()), attr='send_multipart', ctx=Load())
  Constructed full name: reply_socket.send_multipart
Visiting call: send_multipart (full: reply_socket.send_multipart) at line 454
  Args: List(elts=[Attribute(value=Name(id='remote_constants', ctx=Load()), attr='NORMAL_TAG', ctx=Load())], ctx=Load())

[Sink Check] Checking function: send_multipart (full name: reply_socket.send_multipart)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='send_multipart', full name='reply_socket.send_multipart'
    × No match for this pattern
[Sink check result] send_multipart: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load())
  Constructed full name: logger.warning

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load())
  Constructed full name: logger.warning
Visiting call: warning (full: logger.warning) at line 455
  Args: Call(func=Attribute(value=Constant(value='An actor exits and this job {} will exit.'), attr='format', ctx=Load()), args=[Name(id='job_address', ctx=Load())], keywords=[])

[Sink Check] Checking function: warning (full name: logger.warning)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='warning', full name='logger.warning'
    × No match for this pattern
[Sink check result] warning: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='An actor exits and this job {} will exit.'), attr='format', ctx=Load())
  Complex expression: 'An actor exits and this job {} will exit.'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='An actor exits and this job {} will exit.'), attr='format', ctx=Load())
  Complex expression: 'An actor exits and this job {} will exit.'.format
Visiting call: 'An actor exits and this job {} will exit.'.format (full: None) at line 455
  Args: Name(id='job_address', ctx=Load())

[Sink Check] Checking function: 'An actor exits and this job {} will exit.'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''An actor exits and this job {} will exit.'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''An actor exits and this job {} will exit.'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''An actor exits and this job {} will exit.'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''An actor exits and this job {} will exit.'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''An actor exits and this job {} will exit.'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''An actor exits and this job {} will exit.'.format', full name='None'
    × No match for this pattern
[Sink check result] 'An actor exits and this job {} will exit.'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load())
  Constructed full name: logger.error
Visiting call: error (full: logger.error) at line 458
  Args: Call(func=Attribute(value=Constant(value='The job receives an unknown message: {}'), attr='format', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])

[Sink Check] Checking function: error (full name: logger.error)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='error', full name='logger.error'
    × No match for this pattern
[Sink check result] error: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='The job receives an unknown message: {}'), attr='format', ctx=Load())
  Complex expression: 'The job receives an unknown message: {}'.format

[Function Name Parsing] Starting parsing: Attribute(value=Constant(value='The job receives an unknown message: {}'), attr='format', ctx=Load())
  Complex expression: 'The job receives an unknown message: {}'.format
Visiting call: 'The job receives an unknown message: {}'.format (full: None) at line 458
  Args: Name(id='message', ctx=Load())

[Sink Check] Checking function: 'The job receives an unknown message: {}'.format (full name: N/A)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name=''The job receives an unknown message: {}'.format', full name='None'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name=''The job receives an unknown message: {}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name=''The job receives an unknown message: {}'.format', full name='None'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name=''The job receives an unknown message: {}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name=''The job receives an unknown message: {}'.format', full name='None'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name=''The job receives an unknown message: {}'.format', full name='None'
    × No match for this pattern
[Sink check result] 'The job receives an unknown message: {}'.format: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load())
  Constructed full name: argparse.ArgumentParser
Found source assignment: parser = ArgumentParser at line 463

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load())
  Constructed full name: argparse.ArgumentParser
Checking assignment with function call: ArgumentParser (full: argparse.ArgumentParser) at line 463
Found source in assignment: CommandLineArgs at line 463
Tainted variable 'parser' from source CommandLineArgs

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load())
  Constructed full name: argparse.ArgumentParser

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load())
  Constructed full name: argparse.ArgumentParser
Visiting call: ArgumentParser (full: argparse.ArgumentParser) at line 463
Found source: CommandLineArgs at line 463

[Sink Check] Checking function: ArgumentParser (full name: argparse.ArgumentParser)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='ArgumentParser', full name='argparse.ArgumentParser'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='ArgumentParser', full name='argparse.ArgumentParser'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='ArgumentParser', full name='argparse.ArgumentParser'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='ArgumentParser', full name='argparse.ArgumentParser'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='ArgumentParser', full name='argparse.ArgumentParser'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='ArgumentParser', full name='argparse.ArgumentParser'
    × No match for this pattern
[Sink check result] ArgumentParser: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load())
  Constructed full name: parser.add_argument
Tracking method call on tainted variable: parser.add_argument at line 464

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load())
  Constructed full name: parser.add_argument
Visiting call: add_argument (full: parser.add_argument) at line 464
  Args: Constant(value='--worker_address')
  Keywords: required=Constant(value=True), type=Name(id='str', ctx=Load()), help=Constant(value='worker_address')

[Sink Check] Checking function: add_argument (full name: parser.add_argument)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
[Sink check result] add_argument: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load())
  Constructed full name: parser.add_argument
Tracking method call on tainted variable: parser.add_argument at line 465

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load())
  Constructed full name: parser.add_argument
Visiting call: add_argument (full: parser.add_argument) at line 465
  Args: Constant(value='--log_server_address')
  Keywords: required=Constant(value=True), type=Name(id='str', ctx=Load()), help=Constant(value='log_server_address, address of the log web server on worker')

[Sink Check] Checking function: add_argument (full name: parser.add_argument)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='add_argument', full name='parser.add_argument'
    × No match for this pattern
[Sink check result] add_argument: Not a sink


[Function Name Parsing] Starting parsing: Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load())
  Constructed full name: parser.parse_args
Found source assignment: args = parse_args at line 470

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load())
  Constructed full name: parser.parse_args
Checking assignment with function call: parse_args (full: parser.parse_args) at line 470
Found source in assignment: CommandLineArgs at line 470
Tainted variable 'args' from source CommandLineArgs

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load())
  Constructed full name: parser.parse_args
Tracking method call on tainted variable: parser.parse_args at line 470
  Taint propagated to: args

[Function Name Parsing] Starting parsing: Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load())
  Constructed full name: parser.parse_args
Visiting call: parse_args (full: parser.parse_args) at line 470
Found source: CommandLineArgs at line 470

[Sink Check] Checking function: parse_args (full name: parser.parse_args)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='parse_args', full name='parser.parse_args'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='parse_args', full name='parser.parse_args'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='parse_args', full name='parser.parse_args'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='parse_args', full name='parser.parse_args'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='parse_args', full name='parser.parse_args'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='parse_args', full name='parser.parse_args'
    × No match for this pattern
[Sink check result] parse_args: Not a sink


[Function Name Parsing] Starting parsing: Name(id='Job', ctx=Load())
  Using simple name: Job

[Function Name Parsing] Starting parsing: Name(id='Job', ctx=Load())
  Using simple name: Job
Checking assignment with function call: Job (full: Job) at line 471

[Function Name Parsing] Starting parsing: Name(id='Job', ctx=Load())
  Using simple name: Job

[Function Name Parsing] Starting parsing: Name(id='Job', ctx=Load())
  Using simple name: Job
Visiting call: Job (full: Job) at line 471
  Args: Attribute(value=Name(id='args', ctx=Load()), attr='worker_address', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='log_server_address', ctx=Load())

[Sink Check] Checking function: Job (full name: Job)
  Current import information:
    - Direct imports: {'compatible_trick', 'cloudpickle', 'threading', 'time', 'pickle', 'traceback', 'tempfile', 'os', 're', 'zmq', 'argparse', 'importlib', 'parl', 'sys', 'shutil', 'psutil'}
    - Alias imports: {}
    - From imports: {'os': 'os', 'compatible_trick': 'compatible_trick', 'argparse': 'argparse', 'cloudpickle': 'cloudpickle', 'pickle': 'pickle', 'psutil': 'psutil', 're': 're', 'sys': 'sys', 'tempfile': 'tempfile', 'shutil': 'shutil', 'threading': 'threading', 'time': 'time', 'traceback': 'traceback', 'zmq': 'zmq', 'importlib': 'importlib', 'parl': 'parl', 'Process': 'multiprocessing.Process', 'Pipe': 'multiprocessing.Pipe', 'to_str': 'parl.utils.to_str', 'to_byte': 'parl.utils.to_byte', 'get_ip_address': 'parl.utils.get_ip_address', 'logger': 'parl.utils.logger', 'loads_argument': 'parl.remote.communication.loads_argument', 'loads_return': 'parl.remote.communication.loads_return', 'dumps_argument': 'parl.remote.communication.dumps_argument', 'dumps_return': 'parl.remote.communication.dumps_return', 'remote_constants': 'parl.remote.remote_constants', 'SerializeError': 'parl.utils.exceptions.SerializeError', 'DeserializeError': 'parl.utils.exceptions.DeserializeError', 'InitializedJob': 'parl.remote.message.InitializedJob', 'redirect_output_to_file': 'parl.remote.utils.redirect_output_to_file', 'load_remote_class': 'parl.remote.remote_class_serialization.load_remote_class', 'create_server_socket': 'parl.remote.zmq_utils.create_server_socket', 'create_client_socket': 'parl.remote.zmq_utils.create_client_socket', 'HeartbeatServerThread': 'parl.remote.grpc_heartbeat.HeartbeatServerThread', 'HeartbeatClientThread': 'parl.remote.grpc_heartbeat.HeartbeatClientThread'}
  [Sink Type] Checking patterns for PickleDeserialization:
    - Current pattern: pickle.load
      Comparing: function name='Job', full name='Job'
    × No match for this pattern
    - Current pattern: pickle.loads
      Comparing: function name='Job', full name='Job'
    × No match for this pattern
    - Current pattern: cPickle.load
      Comparing: function name='Job', full name='Job'
    × No match for this pattern
    - Current pattern: cPickle.loads
      Comparing: function name='Job', full name='Job'
    × No match for this pattern
    - Current pattern: _pickle.load
      Comparing: function name='Job', full name='Job'
    × No match for this pattern
    - Current pattern: _pickle.loads
      Comparing: function name='Job', full name='Job'
    × No match for this pattern
[Sink check result] Job: Not a sink


========== Completed analysis of file: examples/job.py ==========
Found 2 sinks
Found 57 sources
Found 2 potential sinks
✓ Visitor has source_lines attribute with 471 lines of source code
[DEBUG] Building call chain for sink 'PickleDeserialization' (line 250)
[DEBUG] Found tainted variable message used in sink at line 250
[DEBUG] Added source statement for var message at line 387
[DEBUG] Found source using pattern 'recv' at line 247
[DEBUG] Built call chain with 3 nodes
[DEBUG] Sources in call chain: 1
Auto-detected potential vulnerability: PickleDeserialization at line 250
[DEBUG] Building call chain for sink 'PickleDeserialization' (line 309)
[DEBUG] Found tainted variable message used in sink at line 309
[DEBUG] Found tainted variable args used in sink at line 309
[DEBUG] Added source statement for var message at line 387
[DEBUG] Added source statement for var args at line 463
[DEBUG] Found source using pattern 'recv' at line 298
[DEBUG] Built call chain with 3 nodes
[DEBUG] Sources in call chain: 1
Auto-detected potential vulnerability: PickleDeserialization at line 309
Enhanced analysis complete for examples/job.py
Found 2 vulnerabilities with enhanced tracking
Tracked 0 variables with def-use chains
Identified 0 complex data structures
[1/1] Analysis complete, total time: 0.07 seconds
[1/1] AST analysis time: 0.07 seconds
[1/1] Number of vulnerabilities found: 2
[1/1] Number of sources found: 57
[1/1] Number of sinks found: 2
[1/1] Vulnerability details:
[1/1]   1. PotentialPickleDeserialization Vulnerability: [Auto-detected] PickleDeserialization(line 250), no specific source found
[1/1]   2. PotentialPickleDeserialization Vulnerability: [Auto-detected] PickleDeserialization(line 309), no specific source found

[Analysis] Analysis complete, total time: 0.07 seconds
[Analysis] Average time per file: 0.07 seconds
[Analysis] Total vulnerabilities found: 2
[Analysis] Vulnerability type statistics:
  - PotentialPickleDeserialization Vulnerability: 2
[Analysis] Auto-detected potential vulnerabilities: 2
[Analysis] End time: 2025-04-26 20:35:36
Saved output to ./analysis_job_1745670936.json

============================================================
ENHANCED TAINT ANALYSIS RESULTS
------------------------------------------------------------
Files analyzed: 1
Functions analyzed: 10
Vulnerabilities found: 2
------------------------------------------------------------
VULNERABILITIES BY TYPE:
  PotentialPickleDeserialization Vulnerability: 2

TOP 5 AFFECTED FILES:
  job.py: 2
============================================================

============================================================
DETAILED ANALYSIS STATISTICS
------------------------------------------------------------
Files analyzed: 1
Functions analyzed: 10
Vulnerabilities found: 2

PROPAGATION STATISTICS:
Vulnerabilities with propagation chains: 0
Average propagation steps: 0
Max propagation steps: 0
Min propagation steps: 0

CALL CHAIN STATISTICS:
Vulnerabilities with call chains: 2
Average call chain length: 3.0
Max call chain length: 3
Min call chain length: 3

SOURCE TYPE STATISTICS:
  UnknownSource: 2

SINK TYPE STATISTICS:
  PickleDeserialization: 2

TOP SOURCE-SINK PAIRS:
  UnknownSource -> PickleDeserialization: 2
============================================================
[Log] End time: 2025-04-26 20:35:36
[Log] Logging complete
